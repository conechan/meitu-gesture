{"version":3,"file":"gesture.es.js","sources":["../node_modules/@meitu/mtouch/src/utils.js","../node_modules/@meitu/mtouch/src/handlerBus.js","../node_modules/@meitu/mtouch/src/index.js","../src/utils.js","../src/index.js"],"sourcesContent":["export default {\n    getLength(v1) {\n        if (typeof v1 !== 'object') {\n            console.error('getLength error!');\n            return;\n        }\n        return Math.sqrt(v1.x * v1.x + v1.y * v1.y);\n    },\n    getAngle(v1, v2) {\n        if (typeof v1 !== 'object' || typeof v2 !== 'object') {\n            console.error('getAngle error!');\n            return;\n        }\n        let direction = v1.x * v2.y - v2.x * v1.y > 0 ? 1: -1,\n            len1 = this.getLength(v1),\n            len2 = this.getLength(v2),\n            mr = len1 * len2,\n            dot,r;\n        if (mr === 0)return 0;\n        dot = v1.x * v2.x + v1.y * v2.y;\n        r = dot / mr;\n        if (r > 1)r = 1;\n        if (r < -1)r = -1;\n        return Math.acos(r) * direction * 180 / Math.PI;\n    },\n    getBasePoint(el) {\n        if (!el) {\n            console.error('getBasePoint error!');\n            return;\n        }\n        let offset = this.getOffset(el);\n        let x = offset.left + el.getBoundingClientRect().width / 2,\n            y = offset.top + el.getBoundingClientRect().width / 2;\n        return {x: Math.round(x), y: Math.round(y)};\n    },\n    // setPos(el, transform) {\n    //     let str = JSON.stringify(transform);\n    //     let value = `translate3d(${transform.x}px,${transform.y}px,0px) scale(${transform.scale}) rotate(${transform.rotate}deg)`;\n    //     el = typeof el == 'string'? document.querySelector(el): el;\n    //     el.style.transform = value;\n    //     el.setAttribute('data-mtouch-status', str);\n    // },\n    // getPos(el) {\n    //     let defaulTrans;\n    //     let cssTrans = window.getComputedStyle(el,null).transform;\n    //     if(window.getComputedStyle && cssTrans !== 'none'){\n    //         defaulTrans = this.matrixTo(cssTrans);\n    //     }else{\n    //         defaulTrans = {\n    //             x: 0,\n    //             y: 0,\n    //             scale: 1,\n    //             rotate: 0,\n    //         };\n    //     }\n    //     return JSON.parse(el.getAttribute('data-mtouch-status')) || defaulTrans;\n    // },\n    extend(obj1, obj2) {\n        for (let k in obj2) {\n            if (obj2.hasOwnProperty(k)) {\n                if(typeof obj2[k] == 'object'){\n                    if(typeof obj1[k] !== 'object'){\n                        obj1[k] = {};\n                    }\n                    this.extend(obj1[k],obj2[k]);\n                }else{\n                    obj1[k] = obj2[k];\n                }\n            }\n        }\n        return obj1;\n    },\n    getVector(p1, p2) {\n        if (typeof p1 !== 'object' || typeof p2 !== 'object' ) {\n            console.error('getvector error!');\n            return;\n        }\n        let x = Math.round(p1.x - p2.x),\n            y = Math.round(p1.y - p2.y);\n        return { x, y };\n    },\n    getPoint(ev, index) {\n        if (!ev || !ev.touches[index]) {\n            console.error('getPoint error!');\n            return;\n        }\n        return {\n            x: Math.round(ev.touches[index].pageX),\n            y: Math.round(ev.touches[index].pageY),\n        };\n    },\n    getOffset(el){\n        el = typeof el == 'string'? document.querySelector(el): el;\n        let rect = el.getBoundingClientRect();\n        let offset = {\n            left:rect.left + document.body.scrollLeft,\n            top:rect.top + document.body.scrollTop,\n            width:el.offsetWidth,\n            height:el.offsetHeight,\n        };\n        return offset;\n    },\n    matrixTo(matrix){\n        let arr = (matrix.replace('matrix(','').replace(')','')).split(',');\n        let cos = arr[0],\n            sin = arr[1],\n            tan = sin / cos,\n            rotate = Math.atan( tan ) * 180 / Math.PI,\n            scale = cos / ( Math.cos( Math.PI / 180 * rotate )),\n            trans;\n        trans = {\n            x:parseInt(arr[4]),\n            y:parseInt(arr[5]),\n            scale,\n            rotate,\n        };\n        return trans;\n    },\n    getUseName(evName){\n        let useName = evName.replace('start','');\n        let end = useName.indexOf('rotate') !== -1 ? 'nd' : 'end';\n        useName = useName.replace(end,'');\n        return useName;\n    },\n};\n","export default class HandlerBus{\n    constructor(el) {\n        this.handlers = [];\n        this.el = el;\n    }\n    add(handler){\n        this.handlers.push(handler);\n        return this;\n    }\n    del(handler){\n        if(!handler){\n            this.handlers = [];\n        }else{\n            this.handlers.forEach((value,index)=>{\n                if(value === handler){\n                    this.handlers.splice(index,1);\n                }\n            });\n        }\n        return this;\n    }\n    fire(){\n        if(!this.handlers || !this.handlers.length === 0)return;\n        this.handlers.forEach(handler=>{\n            if(typeof handler === 'function') handler.apply(this.el, arguments);\n        });\n        return this;\n    }\n}\n","import _ from './utils';\nimport HandlerBus from './handlerBus';\n\nconst EVENT = ['touchstart','touchmove','touchend','drag','dragstart','dragend','pinch','pinchstart','pinchend','rotate','rotatestart','rotatend'];\n\nconst ORIGINEVENT = ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\n\nexport default function MTouch(config, operator) {\n\n    // 兼容不使用 new 的方式；\n    if (!(this instanceof MTouch))\n        return new MTouch(config, operator);\n\n    // options 多态；\n    let options;\n    if (typeof config === 'string') {\n        options = {};\n        options.receiver = config;\n        if (operator) {\n            options.operator = operator;\n        }\n    } else if (typeof config === 'object') {\n        options = config;\n    }\n\n    this.ops = {\n        // config:\n        receiver: null,\n        operator: null,\n\n        // event\n        touchstart() {},\n        touchmove() {},\n        touchend() {},\n\n        drag() {},\n        dragstart() {},\n        dragend() {},\n\n        pinch() {},\n        pinchstart() {},\n        pinchend() {},\n\n        rotate() {},\n        rotatestart() {},\n        rotatend() {},\n\n        singlePinch: {\n            start() {},\n            pinch() {},\n            end() {},\n            buttonId: null,\n        },\n\n        singleRotate: {\n            start() {},\n            rotate() {},\n            end() {},\n            buttonId: null,\n        },\n    };\n\n    // 开关；\n    this.use = {\n        drag: !!options.drag || !!options.dragstart || !!options.dragend,\n        pinch: !!options.pinch || !!options.pinchstart || !!options.pinchend,\n        rotate: !!options.rotate || !!options.rotatestart || !!options.rotateend,\n        singlePinch: !!options.singlePinch && !!options.singlePinch.buttonId,\n        singleRotate: !!options.singleRotate && !!options.singleRotate.buttonId,\n    };\n\n    this.ops = _.extend(this.ops, options);\n\n    // receiver test;\n    if (!this.ops.receiver || typeof this.ops.receiver !== 'string') {\n        console.error('receiver error,there must be a receiver-selector');\n        return;\n    }\n    // 事件接收器；\n    this.receiver = document.querySelector(this.ops.receiver);\n\n    // 事件操纵器；\n    if (this.ops.operator) {\n        if (typeof this.ops.operator !== 'string') {\n            console.error('operator error, the operator param must be a selector');\n            return;\n        }\n        this.operator = document.querySelector(this.ops.operator);\n    } else {\n        this.operator = this.receiver;\n    }\n    // touch状态；\n    this.fingers = 0;\n    // 初始状态;\n    this.draging = this.pinching = this.rotating = this.singleRotating = this.singlePinching = false;\n\n    this.startScale = 1;\n    this.startPoint = {};\n    this.secondPoint = {};\n    this.pinchStartLength = null;\n    this.singlePinchStartLength = null;\n    this.vector1 = {};\n    this.singleBasePoint = {};\n    // eventbus\n    this.driveBus();\n    this.bind();\n}\n\nMTouch.prototype.driveBus = function() {\n    EVENT.forEach(eventName => {\n        this[eventName] = new HandlerBus(this.receiver).add(this.ops[eventName] || function() {});\n    });\n    this.singlePinchstart = new HandlerBus(this.receiver).add(this.ops.singlePinch.start || function() {});\n    this.singlePinch = new HandlerBus(this.receiver).add(this.ops.singlePinch.pinch || function() {});\n    this.singlePinchend = new HandlerBus(this.receiver).add(this.ops.singlePinch.end || function() {});\n    this.singleRotatestart = new HandlerBus(this.receiver).add(this.ops.singleRotate.start || function() {});\n    this.singleRotate = new HandlerBus(this.receiver).add(this.ops.singleRotate.rotate || function() {});\n    this.singleRotatend = new HandlerBus(this.receiver).add(this.ops.singleRotate.end || function() {});\n};\n\nMTouch.prototype.bind = function() {\n    ORIGINEVENT.forEach(evName => {\n        let fn = evName == 'touchcancel'? 'end': evName.replace('touch', '');\n        // 需要存下 bind(this) 后的函数指向，用于 destroy;\n        this[fn + '_bind'] = this[fn].bind(this);\n        this.receiver.addEventListener(evName, this[fn + '_bind'], false);\n    });\n};\nMTouch.prototype.destroy = function() {\n    ORIGINEVENT.forEach(evName => {\n        let fn = evName == 'touchcancel'\n            ? 'end'\n            : evName.replace('touch', '');\n        this.receiver.removeEventListener(evName, this[fn + '_bind'], false);\n    });\n};\nMTouch.prototype.start = function(ev) {\n    if (!ev.touches || ev.type !== 'touchstart')return;\n\n    this.fingers = ev.touches.length;\n    this.startPoint = _.getPoint(ev, 0);\n    this.singleBasePoint = _.getBasePoint(this.operator);\n\n    if (this.fingers > 1) {\n        this.secondPoint = _.getPoint(ev, 1);\n        this.vector1 = _.getVector(this.secondPoint, this.startPoint);\n        this.pinchStartLength = _.getLength(this.vector1);\n    } else if (this.use.singlePinch) {\n        let pinchV1 = _.getVector(this.startPoint, this.singleBasePoint);\n        this.singlePinchStartLength = _.getLength(pinchV1);\n    }\n\n    this.touchstart.fire({origin: ev, eventType: 'touchstart'});\n};\nMTouch.prototype.move = function(ev) {\n    if (!ev.touches || ev.type !== 'touchmove')return;\n    let curPoint = _.getPoint(ev, 0),\n        curFingers = ev.touches.length,\n        rotateV1,\n        rotateV2,\n        pinchV2,\n        pinchLength,\n        singlePinchLength;\n\n    // 当从原先的两指到一指的时候，可能会出现基础手指的变化，导致跳动；\n    // 因此需屏蔽掉一次错误的touchmove事件，待重新设置基础指后，再继续进行；\n    if (curFingers < this.fingers) {\n        this.startPoint = curPoint;\n        this.fingers = curFingers;\n        return;\n    }\n\n    // 两指先后触摸时，只会触发第一指一次touchstart，第二指不会再次触发touchstart；\n    // 因此会出现没有记录第二指状态，需要在touchmove中重新获取参数；\n    if (curFingers > 1 && (!this.secondPoint || !this.vector1 || !this.pinchStartLength)) {\n        this.secondPoint = _.getPoint(ev, 1);\n        this.vector1 = _.getVector(this.secondPoint, this.startPoint);\n        this.pinchStartLength = _.getLength(this.vector1);\n    }\n\n    // 双指时，需触发pinch和rotate事件；\n    if (curFingers > 1) {\n        let curSecPoint = _.getPoint(ev, 1),\n            vector2 = _.getVector(curSecPoint, curPoint);\n        // pinch\n        if (this.use.pinch) {\n            pinchLength = _.getLength(vector2);\n            this.eventFire('pinch', {\n                delta: {\n                    scale: pinchLength / this.pinchStartLength,\n                },\n                origin: ev,\n            });\n            this.pinchStartLength = pinchLength;\n        }\n        // rotate\n        if (this.use.rotate) {\n            this.eventFire('rotate', {\n                delta: {\n                    rotate: _.getAngle(this.vector1, vector2),\n                },\n                origin: ev,\n            });\n            this.vector1 = vector2;\n        }\n    } else {\n        // singlePinch;\n        if (this.use.singlePinch && ev.target.id == this.ops.singlePinch.buttonId) {\n            pinchV2 = _.getVector(curPoint, this.singleBasePoint);\n            singlePinchLength = _.getLength(pinchV2);\n            this.eventFire('singlePinch', {\n                delta: {\n                    scale: singlePinchLength / this.singlePinchStartLength,\n                },\n                origin: ev,\n            });\n            this.singlePinchStartLength = singlePinchLength;\n        }\n        // singleRotate;\n        if (this.use.singleRotate && ev.target.id == this.ops.singleRotate.buttonId) {\n            rotateV1 = _.getVector(this.startPoint, this.singleBasePoint);\n            rotateV2 = _.getVector(curPoint, this.singleBasePoint);\n            this.eventFire('singleRotate', {\n                delta: {\n                    rotate: _.getAngle(rotateV1, rotateV2),\n                },\n                origin: ev,\n            });\n        }\n    }\n    if (this.use.drag) {\n        if (ev.target.id !== this.ops.singlePinch.buttonId && ev.target.id !== this.ops.singleRotate.buttonId) {\n            this.eventFire('drag', {\n                delta: {\n                    deltaX: curPoint.x - this.startPoint.x,\n                    deltaY: curPoint.y - this.startPoint.y,\n                },\n                origin: ev,\n            });\n        }\n    }\n    this.startPoint = curPoint;\n    this.touchmove.fire({eventType: 'touchmove', origin: ev});\n    ev.preventDefault();\n};\nMTouch.prototype.end = function(ev) {\n    if (!ev.touches && ev.type !== 'touchend' && ev.type !== 'touchcancel')return;\n    ['pinch', 'drag', 'rotate', 'singleRotate', 'singlePinch'].forEach(evName => {\n        this.eventEnd(evName, {origin: ev});\n    });\n    this.touchend.fire({eventType: 'touchend', origin: ev});\n};\nMTouch.prototype.eventFire = function(evName, ev) {\n    let ing = `${evName}ing`;\n    let start = `${evName}start`;\n    if (!this[ing]) {\n        ev.eventType = start;\n        this[start].fire(ev);\n        this[ing] = true;\n    } else {\n        ev.eventType = evName;\n        this[evName].fire(ev);\n    }\n};\nMTouch.prototype.eventEnd = function(evName, ev) {\n    let ing = `${evName}ing`,\n        end;\n    if (evName == 'rotate' || evName == 'singleRotate') {\n        end = `${evName}nd`;\n    } else {\n        end = `${evName}end`;\n    }\n    if (this[ing]) {\n        ev.eventType = end;\n        this[end].fire(ev);\n        this[ing] = false;\n    }\n};\nMTouch.prototype.switchOperator = function(el) {\n    this.operator = el;\n};\nMTouch.prototype.on = function(evName, handler) {\n    this.use[_.getUseName(evName)] = true;\n    this[evName].add(handler);\n};\nMTouch.prototype.off = function(evName, handler) {\n    this[evName].del(handler);\n};\n","export default {\n    // getLength(v1) {\n    //     if (!v1) {\n    //         console.error('getLength error!');\n    //         return;\n    //     }\n    //     return Math.sqrt(v1.x * v1.x + v1.y * v1.y);\n    // },\n    // getAngle(v1, v2) {\n    //     if (!v1 || !v2) {\n    //         console.error('getAngle error!');\n    //         return;\n    //     }\n    //     let direction = v1.x * v2.y - v2.x * v1.y;\n    //     direction = direction > 0? 1: -1;\n    //     let len1 = Math.sqrt(v1.x * v1.x + v1.y * v1.y);\n    //     let len2 = Math.sqrt(v2.x * v2.x + v2.y * v2.y);\n    //     let mr = len1 * len2;\n    //     if (mr === 0)return 0;\n    //     let dot = v1.x * v2.x + v1.y * v2.y;\n    //     let r = dot / mr;\n    //     if (r > 1)\n    //         r = 1;\n    //     if (r < -1)\n    //         r = -1;\n    //     return Math.acos(r) * direction * 180 / Math.PI;\n    // },\n    // getBasePoint(el) {\n    //     if (!el) {\n    //         console.error('getBasePoint error!');\n    //         return;\n    //     }\n    //     let x = el.getBoundingClientRect().left + el.getBoundingClientRect().width / 2,\n    //         y = el.getBoundingClientRect().top + el.getBoundingClientRect().width / 2;\n    //     return {x: Math.round(x), y: Math.round(y)};\n    // },\n    setPos(el, transform) {\n        let str = JSON.stringify(transform);\n        let value = `translate3d(${transform.x}px,${transform.y}px,0px) scale(${transform.scale}) rotate(${transform.rotate}deg)`;\n        el = typeof el == 'string'? document.querySelector(el): el;\n        el.style.transform = value;\n        el.setAttribute('data-mtouch-status', str);\n    },\n    getPos(el) {\n        let defaulTrans;\n        let cssTrans = window.getComputedStyle(el,null).transform;\n        if(window.getComputedStyle && cssTrans !== 'none'){\n            defaulTrans = this.matrixTo(cssTrans);\n        }else{\n            defaulTrans = {\n                x: 0,\n                y: 0,\n                scale: 1,\n                rotate: 0,\n            };\n        }\n        return JSON.parse(el.getAttribute('data-mtouch-status')) || defaulTrans;\n    },\n    extend(obj1, obj2) {\n        for (let k in obj2) {\n            if (obj2.hasOwnProperty(k)) {\n                if(typeof obj2[k] == 'object'){\n                    if(typeof obj1[k] !== 'object' || obj1[k] === null){\n                        obj1[k] = {};\n                    }\n                    this.extend(obj1[k],obj2[k]);\n                }else{\n                    obj1[k] = obj2[k];\n                }\n            }\n        }\n        return obj1;\n    },\n    // getVector(p1, p2) {\n    //     if (!p1 || !p2) {\n    //         console.error('getvector error!');\n    //         return;\n    //     }\n    //     return {\n    //         x: Math.round(p1.x - p2.x),\n    //         y: Math.round(p1.y - p2.y),\n    //     };\n    // },\n    // getPoint(ev, index) {\n    //     if (!ev || !ev.touches[index]) {\n    //         console.error('getPoint error!');\n    //         return;\n    //     }\n    //     return {\n    //         x: Math.round(ev.touches[index].pageX),\n    //         y: Math.round(ev.touches[index].pageY),\n    //     };\n    // },\n    getOffset(el){\n        el = typeof el == 'string'? document.querySelector(el): el;\n        let offset = {};\n        offset.width = el.offsetWidth;\n        offset.height = el.offsetHeight;\n        return offset;\n    },\n    matrixTo(matrix){\n        let arr = (matrix.replace('matrix(','').replace(')','')).split(',');\n        let cos = arr[0],\n            sin = arr[1],\n            tan = sin/cos,\n            rotate = Math.atan(tan)*180/Math.PI,\n            scale = cos/(Math.cos(Math.PI/180*rotate)),\n            trans;\n        trans = {\n            x:parseInt(arr[4]),\n            y:parseInt(arr[5]),\n            scale,\n            rotate,\n        };\n        return trans;\n    },\n};\n","import MTouch from '@meitu/mtouch';\nimport _ from './utils';\n\nwindow.requestAnimFrame = (function() {\n    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || function(callback) {\n        window.setTimeout(callback, 1000 / 60);\n    };\n})();\n\nexport default class MGesture {\n    constructor(options) {\n        this.freezed = false;\n        this.ops = {\n            receiver: null,\n            operator: null,\n            drag:false,\n            pinch:false,\n            rotate:false,\n            singlePinch:false,\n            singleRotate:false,\n            limit:null,\n\n            // event\n            event:{\n                touchstart() {},\n                touchmove() {},\n                touchend() {},\n\n                dragstart() {},\n                drag(){},\n                dragend() {},\n\n                pinchstart() {},\n                pinch(){},\n                pinchend() {},\n\n                rotatestart() {},\n                rotate(){},\n                rotatend() {},\n\n                singlePinchstart(){},\n                singlePinch(){},\n                singlePinchend(){},\n\n                singleRotatestart(){},\n                singleRotate(){},\n                singleRotatend(){},\n            },\n\n        };\n\n        if(!options.receiver || typeof options.receiver !== 'string'){\n            console.error('receiver error,there must be a receiver-selector');\n            return;\n        }\n\n        if(options.operator && typeof options.operator !== 'string'){\n            console.error('operator error, the operator param must be a selector');\n            return;\n        }\n\n        this.ops = _.extend(this.ops, options);\n\n        // 事件接收器；\n        this.receiver = document.querySelector(this.ops.receiver);\n        this.receiverStatus = this.receiver.getBoundingClientRect();\n        // 事件操纵器；\n        if(this.ops.operator){\n            this.operator = document.querySelector(this.ops.operator);\n        }else{\n            this.operator = this.receiver;\n        }\n\n        this.operatorStatus = this.operator.getBoundingClientRect();\n\n        if(options.limit === 'crop'){\n            let minX = 0 , minY = 0;\n            if(this.operatorStatus.width > this.receiverStatus.width){\n                minX = (this.operatorStatus.width - this.receiverStatus.width)/this.operatorStatus.width;\n            }\n            if(this.operatorStatus.height > this.receiverStatus.height){\n                minY = (this.operatorStatus.height - this.receiverStatus.height)/this.operatorStatus.height;\n            }\n            this.ops.limit = {\n                x:minX,\n                y:minY,\n                maxScale:1,\n                minScale:1,\n            };\n        }else if(options.limit === true){\n            this.ops.limit = {\n                x:0.5,\n                y:0.5,\n                maxScale:3,\n                minScale:0.4,\n            };\n        }\n\n        this.transform = _.getPos(this.operator);\n        this.mtouch = new MTouch({\n            // config:\n            receiver: this.ops.receiver,\n            operator: this.ops.operator,\n\n            // event\n            touchstart:this.touchstart.bind(this),\n            touchmove:this.ops.event.touchmove,\n            touchend:this.ops.event.touchend,\n\n            drag:this.drag.bind(this),\n            dragstart:this.ops.event.dragstart,\n            dragend:this.ops.event.dragend,\n\n            pinch:this.pinch.bind(this),\n            pinchstart:this.ops.event.pinchstart,\n            pinchend:this.ops.event.pinchend,\n\n            rotate:this.rotate.bind(this),\n            rotatestart:this.ops.event.rotatestart,\n            rotatend:this.ops.event.rotatend,\n\n            singlePinch:{\n                start:this.ops.event.singlePinchstart,\n                pinch:this.singlePinch.bind(this),\n                end:this.ops.event.singlePinchend,\n                buttonId:this.ops.singlePinch.buttonId,\n            },\n\n            singleRotate:{\n                start:this.ops.event.singleRotatestart,\n                rotate:this.singleRotate.bind(this),\n                end:this.ops.event.singleRotatend,\n                buttonId:this.ops.singleRotate.buttonId,\n            },\n        });\n    }\n    touchstart(ev){\n        this.transform = _.getPos(this.operator);\n        this.ops.event.touchstart(ev);\n    }\n    drag(ev){\n        if(this.ops.drag && !this.freezed){\n            this.transform.x += ev.delta.deltaX;\n            this.transform.y += ev.delta.deltaY;\n            this.setTransform();\n            this.ops.event.drag(ev);\n        }\n    }\n    pinch(ev){\n        if(this.ops.pinch && !this.freezed){\n            this.transform.scale *= ev.delta.scale;\n            this.setTransform();\n            this.ops.event.pinch(ev);\n        }\n    }\n    rotate(ev){\n        if(this.ops.rotate && !this.freezed){\n            this.transform.rotate += ev.delta.rotate;\n            this.setTransform();\n            this.ops.event.rotate(ev);\n        }\n    }\n    singlePinch(ev){\n        if(this.ops.singlePinch && !this.freezed){\n            this.transform.scale *= ev.delta.scale;\n            this.setTransform();\n            this.ops.event.singlePinch(ev);\n        }\n    }\n    singleRotate(ev){\n        if(this.ops.singleRotate && !this.freezed){\n            this.transform.rotate += ev.delta.rotate;\n            this.setTransform();\n            this.ops.event.singleRotate(ev);\n        }\n    }\n    setTransform(el = this.operator, transform = this.transform) {\n        let trans = JSON.parse(JSON.stringify(transform));\n        if (this.ops.limit) {\n            trans = this.limitOperator(trans);\n        }\n        window.requestAnimFrame(()=>{\n            _.setPos(el, trans);\n        });\n    }\n    limitOperator(transform) {\n        // 实时获取操作元素的状态；\n        let {minScale, maxScale} = this.ops.limit;\n        if (this.ops.limit.minScale && transform.scale < minScale){\n            transform.scale = minScale;\n        }\n        if (this.ops.limit.maxScale && transform.scale > maxScale){\n            transform.scale = maxScale;\n        }\n        let operatorStatus = _.getOffset(this.operator);\n        // 因缩放产生的间隔；\n        let spaceX = operatorStatus.width * (transform.scale - 1) / 2;\n        let spaceY = operatorStatus.height * (transform.scale - 1) / 2;\n        // 参数设置的边界值；\n        let boundaryX = operatorStatus.width * transform.scale  * (this.ops.limit.x);\n        let boundaryY = operatorStatus.height * transform.scale * (this.ops.limit.y);\n        // 4个边界状态；\n        let minX = spaceX - boundaryX;\n        let minY = spaceX - boundaryY;\n        let maxX = this.receiverStatus.width - operatorStatus.width * transform.scale + spaceX + boundaryX;\n        let maxY = this.receiverStatus.height - operatorStatus.height * transform.scale + spaceY + boundaryY;\n\n        if(this.ops.limit.x || this.ops.limit.x == 0){\n            if(transform.x >= maxX)transform.x = maxX;\n            if(transform.x < minX)transform.x = minX;\n        }\n        if(this.ops.limit.y || this.ops.limit.y == 0){\n            if(transform.y > maxY)transform.y = maxY;\n            if(transform.y < minY)transform.y = minY;\n        }\n        return transform;\n    }\n    switchOperator(el){\n        el = typeof el == 'string'? document.querySelector(el):el;\n        // 转换操作元素后，也需要重置 mtouch 中的单指缩放基本点 singleBasePoint;\n        this.mtouch && this.mtouch.switchOperator(el);\n        this.operator = el;\n        return this;\n    }\n    freeze(freeze){\n        this.freezed = freeze ? true:false;\n        return this;\n    }\n    destory(){\n        this.mtouch && this.mtouch.destroy();\n        this.mtouch = null;\n    }\n}\n"],"names":["v1","error","Math","sqrt","x","y","v2","direction","len1","getLength","len2","mr","dot","r","acos","PI","el","offset","getOffset","left","getBoundingClientRect","width","top","round","obj1","obj2","k","hasOwnProperty","_typeof","extend","p1","p2","ev","index","touches","pageX","pageY","document","querySelector","rect","body","scrollLeft","scrollTop","offsetWidth","offsetHeight","matrix","arr","replace","split","cos","sin","tan","rotate","atan","scale","trans","parseInt","evName","useName","end","indexOf","HandlerBus","handlers","handler","push","forEach","value","splice","length","apply","_this2","EVENT","ORIGINEVENT","MTouch","config","operator","options","receiver","ops","use","drag","dragstart","dragend","pinch","pinchstart","pinchend","rotatestart","rotateend","singlePinch","buttonId","singleRotate","_","fingers","draging","pinching","rotating","singleRotating","singlePinching","startScale","startPoint","secondPoint","pinchStartLength","singlePinchStartLength","vector1","singleBasePoint","driveBus","bind","prototype","eventName","_this","add","singlePinchstart","start","singlePinchend","singleRotatestart","singleRotatend","fn","addEventListener","destroy","removeEventListener","_this3","type","getPoint","getBasePoint","getVector","pinchV1","touchstart","fire","origin","eventType","move","curPoint","curFingers","rotateV1","rotateV2","pinchV2","pinchLength","singlePinchLength","curSecPoint","vector2","eventFire","getAngle","target","id","touchmove","preventDefault","eventEnd","touchend","ing","switchOperator","on","getUseName","off","del","transform","str","JSON","stringify","style","setAttribute","defaulTrans","cssTrans","window","getComputedStyle","matrixTo","parse","getAttribute","height","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","callback","setTimeout","MGesture","freezed","receiverStatus","operatorStatus","limit","minX","minY","getPos","mtouch","event","rotatend","delta","deltaX","deltaY","setTransform","limitOperator","setPos","minScale","maxScale","spaceX","spaceY","boundaryX","boundaryY","maxX","maxY","freeze"],"mappings":"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"}
{"version":3,"file":"gesture.min.js","sources":["../node_modules/@meitu/mtouch/src/utils.js","../node_modules/@meitu/mtouch/src/handlerBus.js","../node_modules/@meitu/mtouch/src/index.js","../src/utils.js","../src/index.js"],"sourcesContent":["export default {\n    getLength(v1) {\n        if (typeof v1 !== 'object') {\n            console.error('getLength error!');\n            return;\n        }\n        return Math.sqrt(v1.x * v1.x + v1.y * v1.y);\n    },\n    getAngle(v1, v2) {\n        if (typeof v1 !== 'object' || typeof v2 !== 'object') {\n            console.error('getAngle error!');\n            return;\n        }\n        let direction = v1.x * v2.y - v2.x * v1.y > 0 ? 1: -1,\n            len1 = this.getLength(v1),\n            len2 = this.getLength(v2),\n            mr = len1 * len2,\n            dot,r;\n        if (mr === 0)return 0;\n        dot = v1.x * v2.x + v1.y * v2.y;\n        r = dot / mr;\n        if (r > 1)r = 1;\n        if (r < -1)r = -1;\n        return Math.acos(r) * direction * 180 / Math.PI;\n    },\n    getBasePoint(el) {\n        if (!el) {\n            console.error('getBasePoint error!');\n            return;\n        }\n        let offset = this.getOffset(el);\n        let x = offset.left + el.getBoundingClientRect().width / 2,\n            y = offset.top + el.getBoundingClientRect().width / 2;\n        return {x: Math.round(x), y: Math.round(y)};\n    },\n    setPos(el, transform) {\n        let str = JSON.stringify(transform);\n        let value = `translate3d(${transform.x}px,${transform.y}px,0px) scale(${transform.scale}) rotate(${transform.rotate}deg)`;\n        el = typeof el == 'string'? document.querySelector(el): el;\n        el.style.transform = value;\n        el.setAttribute('data-mtouch-status', str);\n    },\n    getPos(el) {\n        let defaulTrans;\n        let cssTrans = window.getComputedStyle(el,null).transform;\n        if(window.getComputedStyle && cssTrans !== 'none'){\n            defaulTrans = this.matrixTo(cssTrans);\n        }else{\n            defaulTrans = {\n                x: 0,\n                y: 0,\n                scale: 1,\n                rotate: 0,\n            };\n        }\n        return JSON.parse(el.getAttribute('data-mtouch-status')) || defaulTrans;\n    },\n    extend(obj1, obj2) {\n        for (let k in obj2) {\n            if (obj2.hasOwnProperty(k)) {\n                if(typeof obj2[k] == 'object'){\n                    if(typeof obj1[k] !== 'object'){\n                        obj1[k] = {};\n                    }\n                    this.extend(obj1[k],obj2[k]);\n                }else{\n                    obj1[k] = obj2[k];\n                }\n            }\n        }\n        return obj1;\n    },\n    getVector(p1, p2) {\n        if (typeof p1 !== 'object' || typeof p2 !== 'object' ) {\n            console.error('getvector error!');\n            return;\n        }\n        let x = Math.round(p1.x - p2.x),\n            y = Math.round(p1.y - p2.y);\n        return { x, y };\n    },\n    getPoint(ev, index) {\n        if (!ev || !ev.touches[index]) {\n            console.error('getPoint error!');\n            return;\n        }\n        return {\n            x: Math.round(ev.touches[index].pageX),\n            y: Math.round(ev.touches[index].pageY),\n        };\n    },\n    getOffset(el){\n        el = typeof el == 'string'? document.querySelector(el): el;\n        let rect = el.getBoundingClientRect();\n        let offset = {\n            left:rect.left + document.body.scrollLeft,\n            top:rect.top + document.body.scrollTop,\n            width:el.offsetWidth,\n            height:el.offsetHeight,\n        };\n        return offset;\n    },\n    matrixTo(matrix){\n        let arr = (matrix.replace('matrix(','').replace(')','')).split(',');\n        let cos = arr[0],\n            sin = arr[1],\n            tan = sin / cos,\n            rotate = Math.atan( tan ) * 180 / Math.PI,\n            scale = cos / ( Math.cos( Math.PI / 180 * rotate )),\n            trans;\n        trans = {\n            x:parseInt(arr[4]),\n            y:parseInt(arr[5]),\n            scale,\n            rotate,\n        };\n        return trans;\n    },\n};\n","export default class HandlerBus{\n    constructor(el) {\n        this.handlers = [];\n        this.el = el;\n    };\n    add(handler){\n        this.handlers.push(handler);\n        return this;\n    };\n    del(handler){\n        if(!handler){\n            this.handlers = [];\n        }else{\n            this.handlers.forEach((value,index)=>{\n                if(value === handler){\n                    this.handlers.splice(index,1);\n                }\n            });\n        }\n        return this;\n    };\n    fire(){\n        if(!this.handlers || !this.handlers.length === 0)return;\n        this.handlers.forEach(handler=>{\n            if(typeof handler === 'function') handler.apply(this.el, arguments);\n        })\n        return this;\n    };\n}\n","import _ from './utils';\nimport HandlerBus from './handlerBus';\n\nconst EVENT = [\n    'touchstart',\n    'touchmove',\n    'touchend',\n    'drag',\n    'dragstart',\n    'dragend',\n    'pinch',\n    'pinchstart',\n    'pinchend',\n    'rotate',\n    'rotatestart',\n    'rotatend',\n];\nexport default class MTouch {\n    constructor(options) {\n        this.ops = {\n            // config:\n            receiver: null,\n            operator: null,\n\n            // event\n            touchstart() {},\n            touchmove() {},\n            touchend() {},\n\n            drag() {},\n            dragstart() {},\n            dragend() {},\n\n            pinch() {},\n            pinchstart() {},\n            pinchend() {},\n\n            rotate() {},\n            rotatestart() {},\n            rotatend() {},\n\n            singlePinch:{\n                start(){},\n                pinch(){},\n                end(){},\n                buttonId:null,\n            },\n\n            singleRotate:{\n                start(){},\n                rotate(){},\n                end(){},\n                buttonId:null,\n            },\n        };\n\n        // 开关；\n        this.use = {\n            drag: !!options.drag || !!options.dragstart || !!options.dragend,\n            pinch: !!options.pinch || !!options.pinchstart || !!options.pinchend,\n            rotate: !!options.rotate || !!options.rotatestart || !!options.rotateend,\n            singlePinch: !!options.singlePinch && !!options.singlePinch.buttonId,\n            singleRotate: !!options.singleRotate && !!options.singleRotate.buttonId,\n        };\n\n        this.ops = _.extend(this.ops, options);\n\n        // receiver test;\n        if(!this.ops.receiver || typeof this.ops.receiver !== 'string'){\n            console.error('receiver error,there must be a receiver-selector');\n            return;\n        }\n        // 事件接收器；\n        this.receiver = document.querySelector(this.ops.receiver);\n\n        // 事件操纵器；\n        if (this.ops.operator) {\n            if(typeof this.ops.operator !== 'string'){\n                console.error('operator error, the operator param must be a selector');\n                return;\n            }\n            this.operator = document.querySelector(this.ops.operator);\n        } else {\n            this.operator = this.receiver;\n        }\n\n        // touch状态；\n        this.fingers = 0;\n        // 初始状态;\n        this.draging = this.pinching = this.rotating = this.singleRotating = this.singlePinching = false;\n\n        this.startScale = 1;\n        this.startPoint = {};\n        this.secondPoint = {};\n        this.pinchStartLength = null;\n        this.singlePinchStartLength = null;\n        this.vector1 = {};\n        this.singleBasePoint = {};\n        // eventbus\n        this.driveBus();\n        this.bind();\n    }\n    driveBus() {\n        EVENT.forEach(eventName => {\n            this[eventName] = new HandlerBus(this.receiver).add(this.ops[eventName] || function(){});\n        });\n        this.singlePinchstart = new HandlerBus(this.receiver).add(this.ops.singlePinch.start || function(){});\n        this.singlePinch = new HandlerBus(this.receiver).add(this.ops.singlePinch.pinch || function(){});\n        this.singlePinchend = new HandlerBus(this.receiver).add(this.ops.singlePinch.end || function(){});\n        this.singleRotatestart = new HandlerBus(this.receiver).add(this.ops.singleRotate.start || function(){});\n        this.singleRotate = new HandlerBus(this.receiver).add(this.ops.singleRotate.rotate || function(){});\n        this.singleRotatend = new HandlerBus(this.receiver).add(this.ops.singleRotate.end || function(){});\n    }\n    bind() {\n        ['touchstart', 'touchmove', 'touchend', 'touchcancel'].forEach(evName => {\n            let fn = evName == 'touchcancel'? 'end': evName.replace('touch', '');\n            this.receiver.addEventListener(evName, this[fn].bind(this), false);\n        });\n    }\n    start(ev) {\n        if (!ev.touches || ev.type !== 'touchstart')return;\n\n        this.fingers = ev.touches.length;\n        this.startPoint = _.getPoint(ev, 0);\n        this.singleBasePoint = _.getBasePoint(this.operator);\n\n        if (this.fingers > 1) {\n            this.secondPoint = _.getPoint(ev, 1);\n            this.vector1 = _.getVector(this.secondPoint, this.startPoint);\n            this.pinchStartLength = _.getLength(this.vector1);\n        } else if (this.use.singlePinch) {\n            let pinchV1 = _.getVector(this.startPoint, this.singleBasePoint);\n            this.singlePinchStartLength = _.getLength(pinchV1);\n        }\n\n        this.touchstart.fire({\n            origin : ev,\n            eventType:'touchstart',\n        });\n    }\n    move(ev) {\n        if (!ev.touches || ev.type !== 'touchmove')return;\n        let curPoint = _.getPoint(ev, 0);\n        let curFingers = ev.touches.length;\n        let rotateV1,\n            rotateV2,\n            pinchV2,\n            pinchLength,\n            singlePinchLength;\n\n        // 当从原先的两指到一指的时候，可能会出现基础手指的变化，导致跳动；\n        // 因此需屏蔽掉一次错误的touchmove事件，待重新设置基础指后，再继续进行；\n        if (curFingers < this.fingers) {\n            this.startPoint = curPoint;\n            this.fingers = curFingers;\n            return;\n        }\n\n        // 两指先后触摸时，只会触发第一指一次touchstart，第二指不会再次触发touchstart；\n        // 因此会出现没有记录第二指状态，需要在touchmove中重新获取参数；\n        if (curFingers > 1 && (!this.secondPoint || !this.vector1 || !this.pinchStartLength)) {\n            this.secondPoint = _.getPoint(ev, 1);\n            this.vector1 = _.getVector(this.secondPoint, this.startPoint);\n            this.pinchStartLength = _.getLength(this.vector1);\n        }\n\n        // 双指时，需触发pinch和rotate事件；\n        if (curFingers > 1) {\n            let curSecPoint = _.getPoint(ev, 1);\n            let vector2 = _.getVector(curSecPoint, curPoint);\n            // pinch\n            if (this.use.pinch) {\n                pinchLength = _.getLength(vector2);\n                this.eventFire('pinch', {\n                    delta:{\n                        scale: pinchLength / this.pinchStartLength,\n                    },\n                    origin:ev,\n                });\n                this.pinchStartLength = pinchLength;\n            }\n            // rotate\n            if (this.use.rotate) {\n                this.eventFire('rotate', {\n                    delta:{\n                        rotate: _.getAngle(this.vector1, vector2),\n                    },\n                    origin:ev,\n                });\n                this.vector1 = vector2;\n            }\n        } else {\n            // singlePinch;\n            if (this.use.singlePinch && ev.target.id == this.ops.singlePinch.buttonId) {\n                pinchV2 = _.getVector(curPoint, this.singleBasePoint);\n                singlePinchLength = _.getLength(pinchV2);\n                this.eventFire('singlePinch', {\n                    delta:{\n                        scale: singlePinchLength / this.singlePinchStartLength,\n                    },\n                    origin:ev,\n                });\n                this.singlePinchStartLength = singlePinchLength;\n            }\n            // singleRotate;\n            if (this.use.singleRotate && ev.target.id == this.ops.singleRotate.buttonId) {\n                rotateV1 = _.getVector(this.startPoint, this.singleBasePoint);\n                rotateV2 = _.getVector(curPoint, this.singleBasePoint);\n                this.eventFire('singleRotate', {\n                    delta:{\n                        rotate: _.getAngle(rotateV1, rotateV2),\n                    },\n                    origin:ev,\n                });\n            }\n        }\n        if (this.use.drag) {\n            if (ev.target.id !== this.ops.singlePinch.buttonId && ev.target.id !== this.ops.singleRotate.buttonId) {\n                this.eventFire('drag', {\n                    delta:{\n                        deltaX: curPoint.x - this.startPoint.x,\n                        deltaY: curPoint.y - this.startPoint.y,\n                    },\n                    origin:ev,\n                });\n            }\n        }\n        this.startPoint = curPoint;\n        this.touchmove.fire({\n            eventType:'touchmove',\n            origin:ev,\n        });\n        ev.preventDefault();\n    }\n    end(ev) {\n        if (!ev.touches && ev.type !== 'touchend' && ev.type !== 'touchcancel')\n            return;\n\n        ['pinch', 'drag', 'rotate', 'singleRotate', 'singlePinch'].forEach(evName => {\n            this.eventEnd(evName, {\n                origin:ev,\n            });\n        });\n        this.touchend.fire({\n            eventType:'touchend',\n            origin:ev,\n        });\n    }\n    eventFire(evName, ev) {\n        let ing = `${evName}ing`;\n        let start = `${evName}start`;\n        if (!this[ing]) {\n            ev.eventType = start;\n            this[start].fire(ev);\n            this[ing] = true;\n        } else {\n            ev.eventType = evName;\n            this[evName].fire(ev);\n        }\n    }\n    eventEnd(evName, ev) {\n        let ing = `${evName}ing`;\n        let end;\n        if (evName == 'rotate' || evName == 'singleRotate') {\n            end = `${evName}nd`;\n        } else {\n            end = `${evName}end`;\n        }\n        if (this[ing]) {\n            ev.eventType = end;\n            this[end].fire(ev);\n            this[ing] = false;\n        }\n    }\n    switchOperator(el) {\n        this.operator = el;\n    }\n    on(evName, handler) {\n        this[evName] && this[evName].add(handler);\n    }\n    off(evName, handler) {\n        this[evName] && this[evName].del(handler);\n    }\n}\n","export default {\n    getLength(v1) {\n        if (!v1) {\n            console.error('getLength error!');\n            return;\n        }\n        return Math.sqrt(v1.x * v1.x + v1.y * v1.y);\n    },\n    getAngle(v1, v2) {\n        if (!v1 || !v2) {\n            console.error('getAngle error!');\n            return;\n        }\n        let direction = v1.x * v2.y - v2.x * v1.y;\n        direction = direction > 0? 1: -1;\n        let len1 = Math.sqrt(v1.x * v1.x + v1.y * v1.y);\n        let len2 = Math.sqrt(v2.x * v2.x + v2.y * v2.y);\n        let mr = len1 * len2;\n        if (mr === 0)return 0;\n        let dot = v1.x * v2.x + v1.y * v2.y;\n        let r = dot / mr;\n        if (r > 1)\n            r = 1;\n        if (r < -1)\n            r = -1;\n        return Math.acos(r) * direction * 180 / Math.PI;\n    },\n    getBasePoint(el) {\n        if (!el) {\n            console.error('getBasePoint error!');\n            return;\n        }\n        let x = el.getBoundingClientRect().left + el.getBoundingClientRect().width / 2,\n            y = el.getBoundingClientRect().top + el.getBoundingClientRect().width / 2;\n        return {x: Math.round(x), y: Math.round(y)};\n    },\n    setPos(el, transform) {\n        let str = JSON.stringify(transform);\n        let value = `translate3d(${transform.x}px,${transform.y}px,0px) scale(${transform.scale}) rotate(${transform.rotate}deg)`;\n        el = typeof el == 'string'? document.querySelector(el): el;\n        el.style.transform = value;\n        el.setAttribute('data-mtouch-status', str);\n    },\n    getPos(el) {\n        let defaulTrans;\n        let cssTrans = window.getComputedStyle(el,null).transform;\n        if(window.getComputedStyle && cssTrans !== 'none'){\n            defaulTrans = this.matrixTo(cssTrans);\n        }else{\n            defaulTrans = {\n                x: 0,\n                y: 0,\n                scale: 1,\n                rotate: 0,\n            };\n        }\n        return JSON.parse(el.getAttribute('data-mtouch-status')) || defaulTrans;\n    },\n    extend(obj1, obj2) {\n        for (let k in obj2) {\n            if (obj2.hasOwnProperty(k)) {\n                if(typeof obj2[k] == 'object'){\n                    if(typeof obj1[k] !== 'object' || obj1[k] === null){\n                        obj1[k] = {};\n                    }\n                    this.extend(obj1[k],obj2[k]);\n                }else{\n                    obj1[k] = obj2[k];\n                }\n            }\n        }\n        return obj1;\n    },\n    getVector(p1, p2) {\n        if (!p1 || !p2) {\n            console.error('getvector error!');\n            return;\n        }\n        return {\n            x: Math.round(p1.x - p2.x),\n            y: Math.round(p1.y - p2.y),\n        };\n    },\n    getPoint(ev, index) {\n        if (!ev || !ev.touches[index]) {\n            console.error('getPoint error!');\n            return;\n        }\n        return {\n            x: Math.round(ev.touches[index].pageX),\n            y: Math.round(ev.touches[index].pageY),\n        };\n    },\n    getOffset(el){\n        el = typeof el == 'string'? document.querySelector(el): el;\n        let offset = {};\n        offset.width = el.offsetWidth;\n        offset.height = el.offsetHeight;\n        return offset;\n    },\n    matrixTo(matrix){\n        let arr = (matrix.replace('matrix(','').replace(')','')).split(',');\n        let cos = arr[0],\n            sin = arr[1],\n            tan = sin/cos,\n            rotate = Math.atan(tan)*180/Math.PI,\n            scale = cos/(Math.cos(Math.PI/180*rotate)),\n            trans;\n        trans = {\n            x:parseInt(arr[4]),\n            y:parseInt(arr[5]),\n            scale,\n            rotate,\n        };\n        return trans;\n    },\n};\n","import MTouch from '@meitu/mtouch';\nimport _ from './utils';\n\nwindow.requestAnimFrame = (function() {\n    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || function(callback) {\n        window.setTimeout(callback, 1000 / 60);\n    };\n})();\n\nexport default class MGesture {\n    constructor(options) {\n        this.freezed = false;\n        this.ops = {\n            receiver: null,\n            operator: null,\n            drag:false,\n            pinch:false,\n            rotate:false,\n            singlePinch:false,\n            singleRotate:false,\n            limit:null,\n\n            // event\n            event:{\n                touchstart() {},\n                touchmove() {},\n                touchend() {},\n\n                dragstart() {},\n                drag(){},\n                dragend() {},\n\n                pinchstart() {},\n                pinch(){},\n                pinchend() {},\n\n                rotatestart() {},\n                rotate(){},\n                rotatend() {},\n\n                singlePinchstart(){},\n                singlePinch(){},\n                singlePinchend(){},\n\n                singleRotatestart(){},\n                singleRotate(){},\n                singleRotatend(){},\n            },\n\n        };\n\n        if(!options.receiver || typeof options.receiver !== 'string'){\n            console.error('receiver error,there must be a receiver-selector');\n            return;\n        }\n\n        if(options.operator && typeof options.operator !== 'string'){\n            console.error('operator error, the operator param must be a selector');\n            return;\n        }\n\n        this.ops = _.extend(this.ops, options);\n\n        // 事件接收器；\n        this.receiver = document.querySelector(this.ops.receiver);\n        this.receiverStatus = this.receiver.getBoundingClientRect();\n        // 事件操纵器；\n        if(this.ops.operator){\n            this.operator = document.querySelector(this.ops.operator);\n        }else{\n            this.operator = this.receiver;\n        }\n\n        this.operatorStatus = this.operator.getBoundingClientRect();\n\n        if(options.limit === 'crop'){\n            let minX = 0 , minY = 0;\n            if(this.operatorStatus.width > this.receiverStatus.width){\n                minX = (this.operatorStatus.width - this.receiverStatus.width)/this.operatorStatus.width;\n            }\n            if(this.operatorStatus.height > this.receiverStatus.height){\n                minY = (this.operatorStatus.height - this.receiverStatus.height)/this.operatorStatus.height;\n            }\n            this.ops.limit = {\n                x:minX,\n                y:minY,\n                maxScale:1,\n                minScale:1,\n            };\n        }else if(options.limit === true){\n            this.ops.limit = {\n                x:0.5,\n                y:0.5,\n                maxScale:3,\n                minScale:0.4,\n            };\n        }\n\n        this.transform = _.getPos(this.operator);\n        this.mtouch = new MTouch({\n            // config:\n            receiver: this.ops.receiver,\n            operator: this.ops.operator,\n\n            // event\n            touchstart:this.touchstart.bind(this),\n            touchmove:this.ops.event.touchmove,\n            touchend:this.ops.event.touchend,\n\n            drag:this.drag.bind(this),\n            dragstart:this.ops.event.dragstart,\n            dragend:this.ops.event.dragend,\n\n            pinch:this.pinch.bind(this),\n            pinchstart:this.ops.event.pinchstart,\n            pinchend:this.ops.event.pinchend,\n\n            rotate:this.rotate.bind(this),\n            rotatestart:this.ops.event.rotatestart,\n            rotatend:this.ops.event.rotatend,\n\n            singlePinch:{\n                start:this.ops.event.singlePinchstart,\n                pinch:this.singlePinch.bind(this),\n                end:this.ops.event.singlePinchend,\n                buttonId:this.ops.singlePinch.buttonId,\n            },\n\n            singleRotate:{\n                start:this.ops.event.singleRotatestart,\n                rotate:this.singleRotate.bind(this),\n                end:this.ops.event.singleRotatend,\n                buttonId:this.ops.singleRotate.buttonId,\n            },\n        });\n    }\n    touchstart(ev){\n        this.transform = _.getPos(this.operator);\n        this.ops.event.touchstart(ev);\n    }\n    drag(ev){\n        if(this.ops.drag && !this.freezed){\n            this.transform.x += ev.delta.deltaX;\n            this.transform.y += ev.delta.deltaY;\n            this.setTransform();\n            this.ops.event.drag(ev);\n        }\n    }\n    pinch(ev){\n        if(this.ops.pinch && !this.freezed){\n            this.transform.scale *= ev.delta.scale;\n            this.setTransform();\n            this.ops.event.pinch(ev);\n        }\n    }\n    rotate(ev){\n        if(this.ops.rotate && !this.freezed){\n            this.transform.rotate += ev.delta.rotate;\n            this.setTransform();\n            this.ops.event.rotate(ev);\n        }\n    }\n    singlePinch(ev){\n        if(this.ops.singlePinch && !this.freezed){\n            this.transform.scale *= ev.delta.scale;\n            this.setTransform();\n            this.ops.event.singlePinch(ev);\n        }\n    }\n    singleRotate(ev){\n        if(this.ops.singleRotate && !this.freezed){\n            this.transform.rotate += ev.delta.rotate;\n            this.setTransform();\n            this.ops.event.singleRotate(ev);\n        }\n    }\n    setTransform(el = this.operator, transform = this.transform) {\n        let trans = JSON.parse(JSON.stringify(transform));\n        if (this.ops.limit) {\n            trans = this.limitOperator(trans);\n        }\n        window.requestAnimFrame(()=>{\n            _.setPos(el, trans);\n        });\n    }\n    limitOperator(transform) {\n        // 实时获取操作元素的状态；\n        let {minScale, maxScale} = this.ops.limit;\n        if (this.ops.limit.minScale && transform.scale < minScale){\n            transform.scale = minScale;\n        }\n        if (this.ops.limit.maxScale && transform.scale > maxScale){\n            transform.scale = maxScale;\n        }\n        let operatorStatus = _.getOffset(this.operator);\n        // 因缩放产生的间隔；\n        let spaceX = operatorStatus.width * (transform.scale - 1) / 2;\n        let spaceY = operatorStatus.height * (transform.scale - 1) / 2;\n        // 参数设置的边界值；\n        let boundaryX = operatorStatus.width * transform.scale  * (this.ops.limit.x);\n        let boundaryY = operatorStatus.height * transform.scale * (this.ops.limit.y);\n        // 4个边界状态；\n        let minX = spaceX - boundaryX;\n        let minY = spaceX - boundaryY;\n        let maxX = this.receiverStatus.width - operatorStatus.width * transform.scale + spaceX + boundaryX;\n        let maxY = this.receiverStatus.height - operatorStatus.height * transform.scale + spaceY + boundaryY;\n\n        if(this.ops.limit.x || this.ops.limit.x == 0){\n            if(transform.x >= maxX)transform.x = maxX;\n            if(transform.x < minX)transform.x = minX;\n        }\n        if(this.ops.limit.y || this.ops.limit.y == 0){\n            if(transform.y > maxY)transform.y = maxY;\n            if(transform.y < minY)transform.y = minY;\n        }\n        return transform;\n    }\n    switchOperator(el){\n        el = typeof el == 'string'? document.querySelector(el):el;\n        // 转换操作元素后，也需要重置 mtouch 中的单指缩放基本点 singleBasePoint;\n        this.mtouch.switchOperator(el);\n        this.operator = el;\n        this.freeze(false);\n        return this;\n    }\n    freeze(freeze){\n        this.freezed = freeze ? true:false;\n        return this;\n    }\n}\n"],"names":["v1","error","Math","sqrt","x","y","v2","direction","len1","this","getLength","len2","mr","dot","r","acos","PI","el","offset","getOffset","left","getBoundingClientRect","width","top","round","transform","str","JSON","stringify","value","scale","rotate","document","querySelector","style","setAttribute","defaulTrans","cssTrans","window","getComputedStyle","matrixTo","parse","getAttribute","obj1","obj2","k","hasOwnProperty","_typeof","extend","p1","p2","ev","index","touches","pageX","pageY","rect","body","scrollLeft","scrollTop","offsetWidth","offsetHeight","matrix","arr","replace","split","cos","sin","tan","atan","parseInt","HandlerBus","handlers","handler","push","forEach","splice","length","apply","_this2","EVENT","MTouch","options","ops","use","drag","dragstart","dragend","pinch","pinchstart","pinchend","rotatestart","rotateend","singlePinch","buttonId","singleRotate","_","receiver","operator","fingers","draging","pinching","rotating","singleRotating","singlePinching","startScale","startPoint","secondPoint","pinchStartLength","singlePinchStartLength","vector1","singleBasePoint","driveBus","bind","eventName","_this","add","singlePinchstart","start","singlePinchend","end","singleRotatestart","singleRotatend","fn","evName","addEventListener","type","getPoint","getBasePoint","getVector","pinchV1","touchstart","fire","curPoint","curFingers","rotateV1","rotateV2","pinchV2","pinchLength","singlePinchLength","curSecPoint","vector2","eventFire","getAngle","target","id","touchmove","preventDefault","eventEnd","touchend","ing","eventType","del","height","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","callback","setTimeout","freezed","receiverStatus","operatorStatus","limit","minX","minY","getPos","mtouch","event","rotatend","delta","deltaX","deltaY","setTransform","trans","limitOperator","setPos","minScale","maxScale","spaceX","spaceY","boundaryX","boundaryY","maxX","maxY","switchOperator","freeze"],"mappings":"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"}
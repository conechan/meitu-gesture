{"version":3,"file":"gesture.min.js","sources":["../node_modules/@meitu/mtouch/src/index.js","../node_modules/@meitu/mtouch/src/utils.js","../node_modules/@meitu/mtouch/src/handlerBus.js","../src/utils.js","../src/index.js"],"sourcesContent":["import _ from './utils';\nimport HandlerBus from './handlerBus';\n\nconst EVENT = ['touchstart','touchmove','touchend','drag','dragstart','dragend','pinch','pinchstart','pinchend','rotate','rotatestart','rotatend'];\n\nconst ORIGINEVENT = ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\n\nexport default function MTouch(config, operator) {\n\n    // 兼容不使用 new 的方式；\n    if (!(this instanceof MTouch))\n        return new MTouch(config, operator);\n\n    // options 多态；\n    let options;\n    if (typeof config === 'string') {\n        options = {};\n        options.receiver = config;\n        if (operator) {\n            options.operator = operator;\n        }\n    } else if (typeof config === 'object') {\n        options = config;\n    }\n\n    this.ops = {\n        // config:\n        receiver: null,\n        operator: null,\n\n        // event\n        touchstart() {},\n        touchmove() {},\n        touchend() {},\n\n        drag() {},\n        dragstart() {},\n        dragend() {},\n\n        pinch() {},\n        pinchstart() {},\n        pinchend() {},\n\n        rotate() {},\n        rotatestart() {},\n        rotatend() {},\n\n        singlePinch: {\n            start() {},\n            pinch() {},\n            end() {},\n            buttonId: null,\n        },\n\n        singleRotate: {\n            start() {},\n            rotate() {},\n            end() {},\n            buttonId: null,\n        },\n    };\n\n    // 开关；\n    this.use = {\n        drag: !!options.drag || !!options.dragstart || !!options.dragend,\n        pinch: !!options.pinch || !!options.pinchstart || !!options.pinchend,\n        rotate: !!options.rotate || !!options.rotatestart || !!options.rotateend,\n        singlePinch: !!options.singlePinch && !!options.singlePinch.buttonId,\n        singleRotate: !!options.singleRotate && !!options.singleRotate.buttonId,\n    };\n\n    this.ops = _.extend(this.ops, options);\n\n    // receiver test;\n    if (!this.ops.receiver || typeof this.ops.receiver !== 'string') {\n        console.error('receiver error,there must be a receiver-selector');\n        return;\n    }\n    // 事件接收器；\n    this.receiver = document.querySelector(this.ops.receiver);\n\n    // 事件操纵器；\n    if (this.ops.operator) {\n        if (typeof this.ops.operator !== 'string') {\n            console.error('operator error, the operator param must be a selector');\n            return;\n        }\n        this.operator = document.querySelector(this.ops.operator);\n    } else {\n        this.operator = this.receiver;\n    }\n    // touch状态；\n    this.fingers = 0;\n    // 初始状态;\n    this.draging = this.pinching = this.rotating = this.singleRotating = this.singlePinching = false;\n\n    this.startScale = 1;\n    this.startPoint = {};\n    this.secondPoint = {};\n    this.pinchStartLength = null;\n    this.singlePinchStartLength = null;\n    this.vector1 = {};\n    this.singleBasePoint = {};\n    // eventbus\n    this.driveBus();\n    this.bind();\n}\n\nMTouch.prototype.driveBus = function() {\n    EVENT.forEach(eventName => {\n        this[eventName] = new HandlerBus(this.receiver).add(this.ops[eventName] || function() {});\n    });\n    this.singlePinchstart = new HandlerBus(this.receiver).add(this.ops.singlePinch.start || function() {});\n    this.singlePinch = new HandlerBus(this.receiver).add(this.ops.singlePinch.pinch || function() {});\n    this.singlePinchend = new HandlerBus(this.receiver).add(this.ops.singlePinch.end || function() {});\n    this.singleRotatestart = new HandlerBus(this.receiver).add(this.ops.singleRotate.start || function() {});\n    this.singleRotate = new HandlerBus(this.receiver).add(this.ops.singleRotate.rotate || function() {});\n    this.singleRotatend = new HandlerBus(this.receiver).add(this.ops.singleRotate.end || function() {});\n};\n\nMTouch.prototype.bind = function() {\n    ORIGINEVENT.forEach(evName => {\n        let fn = evName == 'touchcancel'? 'end': evName.replace('touch', '');\n        // 需要存下 bind(this) 后的函数指向，用于 destroy;\n        this[fn + '_bind'] = this[fn].bind(this);\n        this.receiver.addEventListener(evName, this[fn + '_bind'], false);\n    });\n};\nMTouch.prototype.destroy = function() {\n    ORIGINEVENT.forEach(evName => {\n        let fn = evName == 'touchcancel'\n            ? 'end'\n            : evName.replace('touch', '');\n        this.receiver.removeEventListener(evName, this[fn + '_bind'], false);\n    });\n};\nMTouch.prototype.start = function(ev) {\n    if (!ev.touches || ev.type !== 'touchstart')return;\n\n    this.fingers = ev.touches.length;\n    this.startPoint = _.getPoint(ev, 0);\n    this.singleBasePoint = _.getBasePoint(this.operator);\n\n    if (this.fingers > 1) {\n        this.secondPoint = _.getPoint(ev, 1);\n        this.vector1 = _.getVector(this.secondPoint, this.startPoint);\n        this.pinchStartLength = _.getLength(this.vector1);\n    } else if (this.use.singlePinch) {\n        let pinchV1 = _.getVector(this.startPoint, this.singleBasePoint);\n        this.singlePinchStartLength = _.getLength(pinchV1);\n    }\n\n    this.touchstart.fire({origin: ev, eventType: 'touchstart'});\n};\nMTouch.prototype.move = function(ev) {\n    if (!ev.touches || ev.type !== 'touchmove')return;\n    let curPoint = _.getPoint(ev, 0),\n        curFingers = ev.touches.length,\n        rotateV1,\n        rotateV2,\n        pinchV2,\n        pinchLength,\n        singlePinchLength;\n\n    // 当从原先的两指到一指的时候，可能会出现基础手指的变化，导致跳动；\n    // 因此需屏蔽掉一次错误的touchmove事件，待重新设置基础指后，再继续进行；\n    if (curFingers < this.fingers) {\n        this.startPoint = curPoint;\n        this.fingers = curFingers;\n        return;\n    }\n\n    // 两指先后触摸时，只会触发第一指一次touchstart，第二指不会再次触发touchstart；\n    // 因此会出现没有记录第二指状态，需要在touchmove中重新获取参数；\n    if (curFingers > 1 && (!this.secondPoint || !this.vector1 || !this.pinchStartLength)) {\n        this.secondPoint = _.getPoint(ev, 1);\n        this.vector1 = _.getVector(this.secondPoint, this.startPoint);\n        this.pinchStartLength = _.getLength(this.vector1);\n    }\n\n    // 双指时，需触发pinch和rotate事件；\n    if (curFingers > 1) {\n        let curSecPoint = _.getPoint(ev, 1),\n            vector2 = _.getVector(curSecPoint, curPoint);\n        // pinch\n        if (this.use.pinch) {\n            pinchLength = _.getLength(vector2);\n            this.eventFire('pinch', {\n                delta: {\n                    scale: pinchLength / this.pinchStartLength,\n                },\n                origin: ev,\n            });\n            this.pinchStartLength = pinchLength;\n        }\n        // rotate\n        if (this.use.rotate) {\n            this.eventFire('rotate', {\n                delta: {\n                    rotate: _.getAngle(this.vector1, vector2),\n                },\n                origin: ev,\n            });\n            this.vector1 = vector2;\n        }\n    } else {\n        // singlePinch;\n        if (this.use.singlePinch && ev.target.id == this.ops.singlePinch.buttonId) {\n            pinchV2 = _.getVector(curPoint, this.singleBasePoint);\n            singlePinchLength = _.getLength(pinchV2);\n            this.eventFire('singlePinch', {\n                delta: {\n                    scale: singlePinchLength / this.singlePinchStartLength,\n                },\n                origin: ev,\n            });\n            this.singlePinchStartLength = singlePinchLength;\n        }\n        // singleRotate;\n        if (this.use.singleRotate && ev.target.id == this.ops.singleRotate.buttonId) {\n            rotateV1 = _.getVector(this.startPoint, this.singleBasePoint);\n            rotateV2 = _.getVector(curPoint, this.singleBasePoint);\n            this.eventFire('singleRotate', {\n                delta: {\n                    rotate: _.getAngle(rotateV1, rotateV2),\n                },\n                origin: ev,\n            });\n        }\n    }\n    if (this.use.drag) {\n        if (ev.target.id !== this.ops.singlePinch.buttonId && ev.target.id !== this.ops.singleRotate.buttonId) {\n            this.eventFire('drag', {\n                delta: {\n                    deltaX: curPoint.x - this.startPoint.x,\n                    deltaY: curPoint.y - this.startPoint.y,\n                },\n                origin: ev,\n            });\n        }\n    }\n    this.startPoint = curPoint;\n    this.touchmove.fire({eventType: 'touchmove', origin: ev});\n    ev.preventDefault();\n};\nMTouch.prototype.end = function(ev) {\n    if (!ev.touches && ev.type !== 'touchend' && ev.type !== 'touchcancel')return;\n    ['pinch', 'drag', 'rotate', 'singleRotate', 'singlePinch'].forEach(evName => {\n        this.eventEnd(evName, {origin: ev});\n    });\n    this.touchend.fire({eventType: 'touchend', origin: ev});\n};\nMTouch.prototype.eventFire = function(evName, ev) {\n    let ing = `${evName}ing`;\n    let start = `${evName}start`;\n    if (!this[ing]) {\n        ev.eventType = start;\n        this[start].fire(ev);\n        this[ing] = true;\n    } else {\n        ev.eventType = evName;\n        this[evName].fire(ev);\n    }\n};\nMTouch.prototype.eventEnd = function(evName, ev) {\n    let ing = `${evName}ing`,\n        end;\n    if (evName == 'rotate' || evName == 'singleRotate') {\n        end = `${evName}nd`;\n    } else {\n        end = `${evName}end`;\n    }\n    if (this[ing]) {\n        ev.eventType = end;\n        this[end].fire(ev);\n        this[ing] = false;\n    }\n};\nMTouch.prototype.switchOperator = function(el) {\n    this.operator = el;\n};\nMTouch.prototype.on = function(evName, handler) {\n    this.use[_.getUseName(evName)] = true;\n    this[evName].add(handler);\n};\nMTouch.prototype.off = function(evName, handler) {\n    this[evName].del(handler);\n};\n","export default {\n    getLength(v1) {\n        if (typeof v1 !== 'object') {\n            console.error('getLength error!');\n            return;\n        }\n        return Math.sqrt(v1.x * v1.x + v1.y * v1.y);\n    },\n    getAngle(v1, v2) {\n        if (typeof v1 !== 'object' || typeof v2 !== 'object') {\n            console.error('getAngle error!');\n            return;\n        }\n        let direction = v1.x * v2.y - v2.x * v1.y > 0 ? 1: -1,\n            len1 = this.getLength(v1),\n            len2 = this.getLength(v2),\n            mr = len1 * len2,\n            dot,r;\n        if (mr === 0)return 0;\n        dot = v1.x * v2.x + v1.y * v2.y;\n        r = dot / mr;\n        if (r > 1)r = 1;\n        if (r < -1)r = -1;\n        return Math.acos(r) * direction * 180 / Math.PI;\n    },\n    getBasePoint(el) {\n        if (!el) {\n            console.error('getBasePoint error!');\n            return;\n        }\n        let offset = this.getOffset(el);\n        let x = offset.left + el.getBoundingClientRect().width / 2,\n            y = offset.top + el.getBoundingClientRect().width / 2;\n        return {x: Math.round(x), y: Math.round(y)};\n    },\n    // setPos(el, transform) {\n    //     let str = JSON.stringify(transform);\n    //     let value = `translate3d(${transform.x}px,${transform.y}px,0px) scale(${transform.scale}) rotate(${transform.rotate}deg)`;\n    //     el = typeof el == 'string'? document.querySelector(el): el;\n    //     el.style.transform = value;\n    //     el.setAttribute('data-mtouch-status', str);\n    // },\n    // getPos(el) {\n    //     let defaulTrans;\n    //     let cssTrans = window.getComputedStyle(el,null).transform;\n    //     if(window.getComputedStyle && cssTrans !== 'none'){\n    //         defaulTrans = this.matrixTo(cssTrans);\n    //     }else{\n    //         defaulTrans = {\n    //             x: 0,\n    //             y: 0,\n    //             scale: 1,\n    //             rotate: 0,\n    //         };\n    //     }\n    //     return JSON.parse(el.getAttribute('data-mtouch-status')) || defaulTrans;\n    // },\n    extend(obj1, obj2) {\n        for (let k in obj2) {\n            if (obj2.hasOwnProperty(k)) {\n                if(typeof obj2[k] == 'object'){\n                    if(typeof obj1[k] !== 'object'){\n                        obj1[k] = {};\n                    }\n                    this.extend(obj1[k],obj2[k]);\n                }else{\n                    obj1[k] = obj2[k];\n                }\n            }\n        }\n        return obj1;\n    },\n    getVector(p1, p2) {\n        if (typeof p1 !== 'object' || typeof p2 !== 'object' ) {\n            console.error('getvector error!');\n            return;\n        }\n        let x = Math.round(p1.x - p2.x),\n            y = Math.round(p1.y - p2.y);\n        return { x, y };\n    },\n    getPoint(ev, index) {\n        if (!ev || !ev.touches[index]) {\n            console.error('getPoint error!');\n            return;\n        }\n        return {\n            x: Math.round(ev.touches[index].pageX),\n            y: Math.round(ev.touches[index].pageY),\n        };\n    },\n    getOffset(el){\n        el = typeof el == 'string'? document.querySelector(el): el;\n        let rect = el.getBoundingClientRect();\n        let offset = {\n            left:rect.left + document.body.scrollLeft,\n            top:rect.top + document.body.scrollTop,\n            width:el.offsetWidth,\n            height:el.offsetHeight,\n        };\n        return offset;\n    },\n    matrixTo(matrix){\n        let arr = (matrix.replace('matrix(','').replace(')','')).split(',');\n        let cos = arr[0],\n            sin = arr[1],\n            tan = sin / cos,\n            rotate = Math.atan( tan ) * 180 / Math.PI,\n            scale = cos / ( Math.cos( Math.PI / 180 * rotate )),\n            trans;\n        trans = {\n            x:parseInt(arr[4]),\n            y:parseInt(arr[5]),\n            scale,\n            rotate,\n        };\n        return trans;\n    },\n    getUseName(evName){\n        let useName = evName.replace('start','');\n        let end = useName.indexOf('rotate') !== -1 ? 'nd' : 'end';\n        useName = useName.replace(end,'');\n        return useName;\n    },\n};\n","export default class HandlerBus{\n    constructor(el) {\n        this.handlers = [];\n        this.el = el;\n    }\n    add(handler){\n        this.handlers.push(handler);\n        return this;\n    }\n    del(handler){\n        if(!handler){\n            this.handlers = [];\n        }else{\n            this.handlers.forEach((value,index)=>{\n                if(value === handler){\n                    this.handlers.splice(index,1);\n                }\n            });\n        }\n        return this;\n    }\n    fire(){\n        if(!this.handlers || !this.handlers.length === 0)return;\n        this.handlers.forEach(handler=>{\n            if(typeof handler === 'function') handler.apply(this.el, arguments);\n        });\n        return this;\n    }\n}\n","export default {\n    // getLength(v1) {\n    //     if (!v1) {\n    //         console.error('getLength error!');\n    //         return;\n    //     }\n    //     return Math.sqrt(v1.x * v1.x + v1.y * v1.y);\n    // },\n    // getAngle(v1, v2) {\n    //     if (!v1 || !v2) {\n    //         console.error('getAngle error!');\n    //         return;\n    //     }\n    //     let direction = v1.x * v2.y - v2.x * v1.y;\n    //     direction = direction > 0? 1: -1;\n    //     let len1 = Math.sqrt(v1.x * v1.x + v1.y * v1.y);\n    //     let len2 = Math.sqrt(v2.x * v2.x + v2.y * v2.y);\n    //     let mr = len1 * len2;\n    //     if (mr === 0)return 0;\n    //     let dot = v1.x * v2.x + v1.y * v2.y;\n    //     let r = dot / mr;\n    //     if (r > 1)\n    //         r = 1;\n    //     if (r < -1)\n    //         r = -1;\n    //     return Math.acos(r) * direction * 180 / Math.PI;\n    // },\n    // getBasePoint(el) {\n    //     if (!el) {\n    //         console.error('getBasePoint error!');\n    //         return;\n    //     }\n    //     let x = el.getBoundingClientRect().left + el.getBoundingClientRect().width / 2,\n    //         y = el.getBoundingClientRect().top + el.getBoundingClientRect().width / 2;\n    //     return {x: Math.round(x), y: Math.round(y)};\n    // },\n    setPos(el, transform) {\n        let str = JSON.stringify(transform);\n        let value = `translate3d(${transform.x}px,${transform.y}px,0px) scale(${transform.scale}) rotate(${transform.rotate}deg)`;\n        el = typeof el == 'string'? document.querySelector(el): el;\n        el.style.transform = value;\n        el.setAttribute('data-mtouch-status', str);\n    },\n    getPos(el) {\n        let defaulTrans;\n        let cssTrans = window.getComputedStyle(el,null).transform;\n        if(window.getComputedStyle && cssTrans !== 'none'){\n            defaulTrans = this.matrixTo(cssTrans);\n        }else{\n            defaulTrans = {\n                x: 0,\n                y: 0,\n                scale: 1,\n                rotate: 0,\n            };\n        }\n        return JSON.parse(el.getAttribute('data-mtouch-status')) || defaulTrans;\n    },\n    extend(obj1, obj2) {\n        for (let k in obj2) {\n            if (obj2.hasOwnProperty(k)) {\n                if(typeof obj2[k] == 'object'){\n                    if(typeof obj1[k] !== 'object' || obj1[k] === null){\n                        obj1[k] = {};\n                    }\n                    this.extend(obj1[k],obj2[k]);\n                }else{\n                    obj1[k] = obj2[k];\n                }\n            }\n        }\n        return obj1;\n    },\n    // getVector(p1, p2) {\n    //     if (!p1 || !p2) {\n    //         console.error('getvector error!');\n    //         return;\n    //     }\n    //     return {\n    //         x: Math.round(p1.x - p2.x),\n    //         y: Math.round(p1.y - p2.y),\n    //     };\n    // },\n    // getPoint(ev, index) {\n    //     if (!ev || !ev.touches[index]) {\n    //         console.error('getPoint error!');\n    //         return;\n    //     }\n    //     return {\n    //         x: Math.round(ev.touches[index].pageX),\n    //         y: Math.round(ev.touches[index].pageY),\n    //     };\n    // },\n    getOffset(el){\n        el = typeof el == 'string'? document.querySelector(el): el;\n        let offset = {};\n        offset.width = el.offsetWidth;\n        offset.height = el.offsetHeight;\n        return offset;\n    },\n    matrixTo(matrix){\n        let arr = (matrix.replace('matrix(','').replace(')','')).split(',');\n        let cos = arr[0],\n            sin = arr[1],\n            tan = sin/cos,\n            rotate = Math.atan(tan)*180/Math.PI,\n            scale = cos/(Math.cos(Math.PI/180*rotate)),\n            trans;\n        trans = {\n            x:parseInt(arr[4]),\n            y:parseInt(arr[5]),\n            scale,\n            rotate,\n        };\n        return trans;\n    },\n};\n","import MTouch from '@meitu/mtouch';\nimport _ from './utils';\n\nwindow.requestAnimFrame = (function() {\n    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || function(callback) {\n        window.setTimeout(callback, 1000 / 60);\n    };\n})();\n\nexport default class MGesture {\n    constructor(options) {\n        this.freezed = false;\n        this.ops = {\n            receiver: null,\n            operator: null,\n            drag:false,\n            pinch:false,\n            rotate:false,\n            singlePinch:false,\n            singleRotate:false,\n            limit:null,\n\n            // event\n            event:{\n                touchstart() {},\n                touchmove() {},\n                touchend() {},\n\n                dragstart() {},\n                drag(){},\n                dragend() {},\n\n                pinchstart() {},\n                pinch(){},\n                pinchend() {},\n\n                rotatestart() {},\n                rotate(){},\n                rotatend() {},\n\n                singlePinchstart(){},\n                singlePinch(){},\n                singlePinchend(){},\n\n                singleRotatestart(){},\n                singleRotate(){},\n                singleRotatend(){},\n            },\n\n        };\n\n        if(!options.receiver || typeof options.receiver !== 'string'){\n            console.error('receiver error,there must be a receiver-selector');\n            return;\n        }\n\n        if(options.operator && typeof options.operator !== 'string'){\n            console.error('operator error, the operator param must be a selector');\n            return;\n        }\n\n        this.ops = _.extend(this.ops, options);\n\n        // 事件接收器；\n        this.receiver = document.querySelector(this.ops.receiver);\n        this.receiverStatus = this.receiver.getBoundingClientRect();\n        // 事件操纵器；\n        if(this.ops.operator){\n            this.operator = document.querySelector(this.ops.operator);\n        }else{\n            this.operator = this.receiver;\n        }\n\n        this.operatorStatus = this.operator.getBoundingClientRect();\n\n        if(options.limit === 'crop'){\n            let minX = 0 , minY = 0;\n            if(this.operatorStatus.width > this.receiverStatus.width){\n                minX = (this.operatorStatus.width - this.receiverStatus.width)/this.operatorStatus.width;\n            }\n            if(this.operatorStatus.height > this.receiverStatus.height){\n                minY = (this.operatorStatus.height - this.receiverStatus.height)/this.operatorStatus.height;\n            }\n            this.ops.limit = {\n                x:minX,\n                y:minY,\n                maxScale:1,\n                minScale:1,\n            };\n        }else if(options.limit === true){\n            this.ops.limit = {\n                x:0.5,\n                y:0.5,\n                maxScale:3,\n                minScale:0.4,\n            };\n        }\n\n        this.transform = _.getPos(this.operator);\n        this.mtouch = new MTouch({\n            // config:\n            receiver: this.ops.receiver,\n            operator: this.ops.operator,\n\n            // event\n            touchstart:this.touchstart.bind(this),\n            touchmove:this.ops.event.touchmove,\n            touchend:this.ops.event.touchend,\n\n            drag:this.drag.bind(this),\n            dragstart:this.ops.event.dragstart,\n            dragend:this.ops.event.dragend,\n\n            pinch:this.pinch.bind(this),\n            pinchstart:this.ops.event.pinchstart,\n            pinchend:this.ops.event.pinchend,\n\n            rotate:this.rotate.bind(this),\n            rotatestart:this.ops.event.rotatestart,\n            rotatend:this.ops.event.rotatend,\n\n            singlePinch:{\n                start:this.ops.event.singlePinchstart,\n                pinch:this.singlePinch.bind(this),\n                end:this.ops.event.singlePinchend,\n                buttonId:this.ops.singlePinch.buttonId,\n            },\n\n            singleRotate:{\n                start:this.ops.event.singleRotatestart,\n                rotate:this.singleRotate.bind(this),\n                end:this.ops.event.singleRotatend,\n                buttonId:this.ops.singleRotate.buttonId,\n            },\n        });\n    }\n    touchstart(ev){\n        this.transform = _.getPos(this.operator);\n        this.ops.event.touchstart(ev);\n    }\n    drag(ev){\n        if(this.ops.drag && !this.freezed){\n            this.transform.x += ev.delta.deltaX;\n            this.transform.y += ev.delta.deltaY;\n            this.setTransform();\n            this.ops.event.drag(ev);\n        }\n    }\n    pinch(ev){\n        if(this.ops.pinch && !this.freezed){\n            this.transform.scale *= ev.delta.scale;\n            this.setTransform();\n            this.ops.event.pinch(ev);\n        }\n    }\n    rotate(ev){\n        if(this.ops.rotate && !this.freezed){\n            this.transform.rotate += ev.delta.rotate;\n            this.setTransform();\n            this.ops.event.rotate(ev);\n        }\n    }\n    singlePinch(ev){\n        if(this.ops.singlePinch && !this.freezed){\n            this.transform.scale *= ev.delta.scale;\n            this.setTransform();\n            this.ops.event.singlePinch(ev);\n        }\n    }\n    singleRotate(ev){\n        if(this.ops.singleRotate && !this.freezed){\n            this.transform.rotate += ev.delta.rotate;\n            this.setTransform();\n            this.ops.event.singleRotate(ev);\n        }\n    }\n    setTransform(el = this.operator, transform = this.transform) {\n        let trans = JSON.parse(JSON.stringify(transform));\n        if (this.ops.limit) {\n            trans = this.limitOperator(trans);\n        }\n        window.requestAnimFrame(()=>{\n            _.setPos(el, trans);\n        });\n    }\n    limitOperator(transform) {\n        // 实时获取操作元素的状态；\n        let {minScale, maxScale} = this.ops.limit;\n        if (this.ops.limit.minScale && transform.scale < minScale){\n            transform.scale = minScale;\n        }\n        if (this.ops.limit.maxScale && transform.scale > maxScale){\n            transform.scale = maxScale;\n        }\n        let operatorStatus = _.getOffset(this.operator);\n        // 因缩放产生的间隔；\n        let spaceX = operatorStatus.width * (transform.scale - 1) / 2;\n        let spaceY = operatorStatus.height * (transform.scale - 1) / 2;\n        // 参数设置的边界值；\n        let boundaryX = operatorStatus.width * transform.scale  * (this.ops.limit.x);\n        let boundaryY = operatorStatus.height * transform.scale * (this.ops.limit.y);\n        // 4个边界状态；\n        let minX = spaceX - boundaryX;\n        let minY = spaceX - boundaryY;\n        let maxX = this.receiverStatus.width - operatorStatus.width * transform.scale + spaceX + boundaryX;\n        let maxY = this.receiverStatus.height - operatorStatus.height * transform.scale + spaceY + boundaryY;\n\n        if(this.ops.limit.x || this.ops.limit.x == 0){\n            if(transform.x >= maxX)transform.x = maxX;\n            if(transform.x < minX)transform.x = minX;\n        }\n        if(this.ops.limit.y || this.ops.limit.y == 0){\n            if(transform.y > maxY)transform.y = maxY;\n            if(transform.y < minY)transform.y = minY;\n        }\n        return transform;\n    }\n    switchOperator(el){\n        el = typeof el == 'string'? document.querySelector(el):el;\n        // 转换操作元素后，也需要重置 mtouch 中的单指缩放基本点 singleBasePoint;\n        this.mtouch && this.mtouch.switchOperator(el);\n        this.operator = el;\n        return this;\n    }\n    freeze(freeze){\n        this.freezed = freeze ? true:false;\n        return this;\n    }\n    destory(){\n        this.mtouch && this.mtouch.destroy();\n        this.mtouch = null;\n    }\n}\n"],"names":["MTouch","config","operator","this","options","receiver","ops","use","drag","dragstart","dragend","pinch","pinchstart","pinchend","rotate","rotatestart","rotateend","singlePinch","buttonId","singleRotate","_","extend","error","document","querySelector","fingers","draging","pinching","rotating","singleRotating","singlePinching","startScale","startPoint","secondPoint","pinchStartLength","singlePinchStartLength","vector1","singleBasePoint","driveBus","bind","v1","Math","sqrt","x","y","v2","direction","len1","getLength","len2","mr","dot","r","acos","PI","el","offset","getOffset","left","getBoundingClientRect","width","top","round","obj1","obj2","k","hasOwnProperty","_typeof","p1","p2","ev","index","touches","pageX","pageY","rect","body","scrollLeft","scrollTop","offsetWidth","offsetHeight","matrix","arr","replace","split","cos","sin","tan","atan","scale","parseInt","evName","useName","end","indexOf","HandlerBus","handlers","handler","push","forEach","value","splice","length","apply","_this2","EVENT","ORIGINEVENT","prototype","eventName","_this","add","singlePinchstart","start","singlePinchend","singleRotatestart","singleRotatend","fn","addEventListener","destroy","removeEventListener","_this3","type","getPoint","getBasePoint","getVector","pinchV1","touchstart","fire","origin","eventType","move","curPoint","curFingers","rotateV1","rotateV2","pinchV2","pinchLength","singlePinchLength","curSecPoint","vector2","eventFire","getAngle","target","id","touchmove","preventDefault","eventEnd","touchend","ing","switchOperator","on","getUseName","off","del","transform","str","JSON","stringify","style","setAttribute","defaulTrans","cssTrans","window","getComputedStyle","matrixTo","parse","getAttribute","height","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","callback","setTimeout","freezed","receiverStatus","operatorStatus","limit","minX","minY","getPos","mtouch","event","rotatend","delta","deltaX","deltaY","setTransform","trans","limitOperator","setPos","minScale","maxScale","spaceX","spaceY","boundaryX","boundaryY","maxX","maxY","freeze"],"mappings":"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"}
{"version":3,"file":"gesture.js","sources":["../node_modules/@meitu/mtouch/src/utils.js","../node_modules/@meitu/mtouch/src/handlerBus.js","../node_modules/@meitu/mtouch/src/index.js","../src/utils.js","../src/index.js"],"sourcesContent":["export default {\n    getLength(v1) {\n        if (typeof v1 !== 'object') {\n            console.error('getLength error!');\n            return;\n        }\n        return Math.sqrt(v1.x * v1.x + v1.y * v1.y);\n    },\n    getAngle(v1, v2) {\n        if (typeof v1 !== 'object' || typeof v2 !== 'object') {\n            console.error('getAngle error!');\n            return;\n        }\n        let direction = v1.x * v2.y - v2.x * v1.y > 0 ? 1: -1,\n            len1 = this.getLength(v1),\n            len2 = this.getLength(v2),\n            mr = len1 * len2,\n            dot,r;\n        if (mr === 0)return 0;\n        dot = v1.x * v2.x + v1.y * v2.y;\n        r = dot / mr;\n        if (r > 1)r = 1;\n        if (r < -1)r = -1;\n        return Math.acos(r) * direction * 180 / Math.PI;\n    },\n    getBasePoint(el) {\n        if (!el) {\n            console.error('getBasePoint error!');\n            return;\n        }\n        let offset = this.getOffset(el);\n        let x = offset.left + el.getBoundingClientRect().width / 2,\n            y = offset.top + el.getBoundingClientRect().width / 2;\n        return {x: Math.round(x), y: Math.round(y)};\n    },\n    setPos(el, transform) {\n        let str = JSON.stringify(transform);\n        let value = `translate3d(${transform.x}px,${transform.y}px,0px) scale(${transform.scale}) rotate(${transform.rotate}deg)`;\n        el = typeof el == 'string'? document.querySelector(el): el;\n        el.style.transform = value;\n        el.setAttribute('data-mtouch-status', str);\n    },\n    getPos(el) {\n        let defaulTrans;\n        let cssTrans = window.getComputedStyle(el,null).transform;\n        if(window.getComputedStyle && cssTrans !== 'none'){\n            defaulTrans = this.matrixTo(cssTrans);\n        }else{\n            defaulTrans = {\n                x: 0,\n                y: 0,\n                scale: 1,\n                rotate: 0,\n            };\n        }\n        return JSON.parse(el.getAttribute('data-mtouch-status')) || defaulTrans;\n    },\n    extend(obj1, obj2) {\n        for (let k in obj2) {\n            if (obj2.hasOwnProperty(k)) {\n                if(typeof obj2[k] == 'object'){\n                    if(typeof obj1[k] !== 'object'){\n                        obj1[k] = {};\n                    }\n                    this.extend(obj1[k],obj2[k]);\n                }else{\n                    obj1[k] = obj2[k];\n                }\n            }\n        }\n        return obj1;\n    },\n    getVector(p1, p2) {\n        if (typeof p1 !== 'object' || typeof p2 !== 'object' ) {\n            console.error('getvector error!');\n            return;\n        }\n        let x = Math.round(p1.x - p2.x),\n            y = Math.round(p1.y - p2.y);\n        return { x, y };\n    },\n    getPoint(ev, index) {\n        if (!ev || !ev.touches[index]) {\n            console.error('getPoint error!');\n            return;\n        }\n        return {\n            x: Math.round(ev.touches[index].pageX),\n            y: Math.round(ev.touches[index].pageY),\n        };\n    },\n    getOffset(el){\n        el = typeof el == 'string'? document.querySelector(el): el;\n        let rect = el.getBoundingClientRect();\n        let offset = {\n            left:rect.left + document.body.scrollLeft,\n            top:rect.top + document.body.scrollTop,\n            width:el.offsetWidth,\n            height:el.offsetHeight,\n        };\n        return offset;\n    },\n    matrixTo(matrix){\n        let arr = (matrix.replace('matrix(','').replace(')','')).split(',');\n        let cos = arr[0],\n            sin = arr[1],\n            tan = sin / cos,\n            rotate = Math.atan( tan ) * 180 / Math.PI,\n            scale = cos / ( Math.cos( Math.PI / 180 * rotate )),\n            trans;\n        trans = {\n            x:parseInt(arr[4]),\n            y:parseInt(arr[5]),\n            scale,\n            rotate,\n        };\n        return trans;\n    },\n};\n","export default class HandlerBus{\n    constructor(el) {\n        this.handlers = [];\n        this.el = el;\n    };\n    add(handler){\n        this.handlers.push(handler);\n        return this;\n    };\n    del(handler){\n        if(!handler){\n            this.handlers = [];\n        }else{\n            this.handlers.forEach((value,index)=>{\n                if(value === handler){\n                    this.handlers.splice(index,1);\n                }\n            });\n        }\n        return this;\n    };\n    fire(){\n        if(!this.handlers || !this.handlers.length === 0)return;\n        this.handlers.forEach(handler=>{\n            if(typeof handler === 'function') handler.apply(this.el, arguments);\n        })\n        return this;\n    };\n}\n","import _ from './utils';\nimport HandlerBus from './handlerBus';\n\nconst EVENT = [\n    'touchstart',\n    'touchmove',\n    'touchend',\n    'drag',\n    'dragstart',\n    'dragend',\n    'pinch',\n    'pinchstart',\n    'pinchend',\n    'rotate',\n    'rotatestart',\n    'rotatend',\n];\nexport default class MTouch {\n    constructor(options) {\n        this.ops = {\n            // config:\n            receiver: null,\n            operator: null,\n\n            // event\n            touchstart() {},\n            touchmove() {},\n            touchend() {},\n\n            drag() {},\n            dragstart() {},\n            dragend() {},\n\n            pinch() {},\n            pinchstart() {},\n            pinchend() {},\n\n            rotate() {},\n            rotatestart() {},\n            rotatend() {},\n\n            singlePinch:{\n                start(){},\n                pinch(){},\n                end(){},\n                buttonId:null,\n            },\n\n            singleRotate:{\n                start(){},\n                rotate(){},\n                end(){},\n                buttonId:null,\n            },\n        };\n\n        // 开关；\n        this.use = {\n            drag: !!options.drag || !!options.dragstart || !!options.dragend,\n            pinch: !!options.pinch || !!options.pinchstart || !!options.pinchend,\n            rotate: !!options.rotate || !!options.rotatestart || !!options.rotateend,\n            singlePinch: !!options.singlePinch && !!options.singlePinch.buttonId,\n            singleRotate: !!options.singleRotate && !!options.singleRotate.buttonId,\n        };\n\n        this.ops = _.extend(this.ops, options);\n\n        // receiver test;\n        if(!this.ops.receiver || typeof this.ops.receiver !== 'string'){\n            console.error('receiver error,there must be a receiver-selector');\n            return;\n        }\n        // 事件接收器；\n        this.receiver = document.querySelector(this.ops.receiver);\n\n        // 事件操纵器；\n        if (this.ops.operator) {\n            if(typeof this.ops.operator !== 'string'){\n                console.error('operator error, the operator param must be a selector');\n                return;\n            }\n            this.operator = document.querySelector(this.ops.operator);\n        } else {\n            this.operator = this.receiver;\n        }\n\n        // touch状态；\n        this.fingers = 0;\n        // 初始状态;\n        this.draging = this.pinching = this.rotating = this.singleRotating = this.singlePinching = false;\n\n        this.startScale = 1;\n        this.startPoint = {};\n        this.secondPoint = {};\n        this.pinchStartLength = null;\n        this.singlePinchStartLength = null;\n        this.vector1 = {};\n        this.singleBasePoint = {};\n        // eventbus\n        this.driveBus();\n        this.bind();\n    }\n    driveBus() {\n        EVENT.forEach(eventName => {\n            this[eventName] = new HandlerBus(this.receiver).add(this.ops[eventName] || function(){});\n        });\n        this.singlePinchstart = new HandlerBus(this.receiver).add(this.ops.singlePinch.start || function(){});\n        this.singlePinch = new HandlerBus(this.receiver).add(this.ops.singlePinch.pinch || function(){});\n        this.singlePinchend = new HandlerBus(this.receiver).add(this.ops.singlePinch.end || function(){});\n        this.singleRotatestart = new HandlerBus(this.receiver).add(this.ops.singleRotate.start || function(){});\n        this.singleRotate = new HandlerBus(this.receiver).add(this.ops.singleRotate.rotate || function(){});\n        this.singleRotatend = new HandlerBus(this.receiver).add(this.ops.singleRotate.end || function(){});\n    }\n    bind() {\n        ['touchstart', 'touchmove', 'touchend', 'touchcancel'].forEach(evName => {\n            let fn = evName == 'touchcancel'? 'end': evName.replace('touch', '');\n            this.receiver.addEventListener(evName, this[fn].bind(this), false);\n        });\n    }\n    start(ev) {\n        if (!ev.touches || ev.type !== 'touchstart')return;\n\n        this.fingers = ev.touches.length;\n        this.startPoint = _.getPoint(ev, 0);\n        this.singleBasePoint = _.getBasePoint(this.operator);\n\n        if (this.fingers > 1) {\n            this.secondPoint = _.getPoint(ev, 1);\n            this.vector1 = _.getVector(this.secondPoint, this.startPoint);\n            this.pinchStartLength = _.getLength(this.vector1);\n        } else if (this.use.singlePinch) {\n            let pinchV1 = _.getVector(this.startPoint, this.singleBasePoint);\n            this.singlePinchStartLength = _.getLength(pinchV1);\n        }\n\n        this.touchstart.fire({\n            origin : ev,\n            eventType:'touchstart',\n        });\n    }\n    move(ev) {\n        if (!ev.touches || ev.type !== 'touchmove')return;\n        let curPoint = _.getPoint(ev, 0);\n        let curFingers = ev.touches.length;\n        let rotateV1,\n            rotateV2,\n            pinchV2,\n            pinchLength,\n            singlePinchLength;\n\n        // 当从原先的两指到一指的时候，可能会出现基础手指的变化，导致跳动；\n        // 因此需屏蔽掉一次错误的touchmove事件，待重新设置基础指后，再继续进行；\n        if (curFingers < this.fingers) {\n            this.startPoint = curPoint;\n            this.fingers = curFingers;\n            return;\n        }\n\n        // 两指先后触摸时，只会触发第一指一次touchstart，第二指不会再次触发touchstart；\n        // 因此会出现没有记录第二指状态，需要在touchmove中重新获取参数；\n        if (curFingers > 1 && (!this.secondPoint || !this.vector1 || !this.pinchStartLength)) {\n            this.secondPoint = _.getPoint(ev, 1);\n            this.vector1 = _.getVector(this.secondPoint, this.startPoint);\n            this.pinchStartLength = _.getLength(this.vector1);\n        }\n\n        // 双指时，需触发pinch和rotate事件；\n        if (curFingers > 1) {\n            let curSecPoint = _.getPoint(ev, 1);\n            let vector2 = _.getVector(curSecPoint, curPoint);\n            // pinch\n            if (this.use.pinch) {\n                pinchLength = _.getLength(vector2);\n                this.eventFire('pinch', {\n                    delta:{\n                        scale: pinchLength / this.pinchStartLength,\n                    },\n                    origin:ev,\n                });\n                this.pinchStartLength = pinchLength;\n            }\n            // rotate\n            if (this.use.rotate) {\n                this.eventFire('rotate', {\n                    delta:{\n                        rotate: _.getAngle(this.vector1, vector2),\n                    },\n                    origin:ev,\n                });\n                this.vector1 = vector2;\n            }\n        } else {\n            // singlePinch;\n            if (this.use.singlePinch && ev.target.id == this.ops.singlePinch.buttonId) {\n                pinchV2 = _.getVector(curPoint, this.singleBasePoint);\n                singlePinchLength = _.getLength(pinchV2);\n                this.eventFire('singlePinch', {\n                    delta:{\n                        scale: singlePinchLength / this.singlePinchStartLength,\n                    },\n                    origin:ev,\n                });\n                this.singlePinchStartLength = singlePinchLength;\n            }\n            // singleRotate;\n            if (this.use.singleRotate && ev.target.id == this.ops.singleRotate.buttonId) {\n                rotateV1 = _.getVector(this.startPoint, this.singleBasePoint);\n                rotateV2 = _.getVector(curPoint, this.singleBasePoint);\n                this.eventFire('singleRotate', {\n                    delta:{\n                        rotate: _.getAngle(rotateV1, rotateV2),\n                    },\n                    origin:ev,\n                });\n            }\n        }\n        if (this.use.drag) {\n            if (ev.target.id !== this.ops.singlePinch.buttonId && ev.target.id !== this.ops.singleRotate.buttonId) {\n                this.eventFire('drag', {\n                    delta:{\n                        deltaX: curPoint.x - this.startPoint.x,\n                        deltaY: curPoint.y - this.startPoint.y,\n                    },\n                    origin:ev,\n                });\n            }\n        }\n        this.startPoint = curPoint;\n        this.touchmove.fire({\n            eventType:'touchmove',\n            origin:ev,\n        });\n        ev.preventDefault();\n    }\n    end(ev) {\n        if (!ev.touches && ev.type !== 'touchend' && ev.type !== 'touchcancel')\n            return;\n\n        ['pinch', 'drag', 'rotate', 'singleRotate', 'singlePinch'].forEach(evName => {\n            this.eventEnd(evName, {\n                origin:ev,\n            });\n        });\n        this.touchend.fire({\n            eventType:'touchend',\n            origin:ev,\n        });\n    }\n    eventFire(evName, ev) {\n        let ing = `${evName}ing`;\n        let start = `${evName}start`;\n        if (!this[ing]) {\n            ev.eventType = start;\n            this[start].fire(ev);\n            this[ing] = true;\n        } else {\n            ev.eventType = evName;\n            this[evName].fire(ev);\n        }\n    }\n    eventEnd(evName, ev) {\n        let ing = `${evName}ing`;\n        let end;\n        if (evName == 'rotate' || evName == 'singleRotate') {\n            end = `${evName}nd`;\n        } else {\n            end = `${evName}end`;\n        }\n        if (this[ing]) {\n            ev.eventType = end;\n            this[end].fire(ev);\n            this[ing] = false;\n        }\n    }\n    switchOperator(el) {\n        this.operator = el;\n    }\n    on(evName, handler) {\n        this[evName] && this[evName].add(handler);\n    }\n    off(evName, handler) {\n        this[evName] && this[evName].del(handler);\n    }\n}\n","export default {\n    getLength(v1) {\n        if (!v1) {\n            console.error('getLength error!');\n            return;\n        }\n        return Math.sqrt(v1.x * v1.x + v1.y * v1.y);\n    },\n    getAngle(v1, v2) {\n        if (!v1 || !v2) {\n            console.error('getAngle error!');\n            return;\n        }\n        let direction = v1.x * v2.y - v2.x * v1.y;\n        direction = direction > 0? 1: -1;\n        let len1 = Math.sqrt(v1.x * v1.x + v1.y * v1.y);\n        let len2 = Math.sqrt(v2.x * v2.x + v2.y * v2.y);\n        let mr = len1 * len2;\n        if (mr === 0)return 0;\n        let dot = v1.x * v2.x + v1.y * v2.y;\n        let r = dot / mr;\n        if (r > 1)\n            r = 1;\n        if (r < -1)\n            r = -1;\n        return Math.acos(r) * direction * 180 / Math.PI;\n    },\n    getBasePoint(el) {\n        if (!el) {\n            console.error('getBasePoint error!');\n            return;\n        }\n        let x = el.getBoundingClientRect().left + el.getBoundingClientRect().width / 2,\n            y = el.getBoundingClientRect().top + el.getBoundingClientRect().width / 2;\n        return {x: Math.round(x), y: Math.round(y)};\n    },\n    setPos(el, transform) {\n        let str = JSON.stringify(transform);\n        let value = `translate3d(${transform.x}px,${transform.y}px,0px) scale(${transform.scale}) rotate(${transform.rotate}deg)`;\n        el = typeof el == 'string'? document.querySelector(el): el;\n        el.style.transform = value;\n        el.setAttribute('data-mtouch-status', str);\n    },\n    getPos(el) {\n        let defaulTrans;\n        let cssTrans = window.getComputedStyle(el,null).transform;\n        if(window.getComputedStyle && cssTrans !== 'none'){\n            defaulTrans = this.matrixTo(cssTrans);\n        }else{\n            defaulTrans = {\n                x: 0,\n                y: 0,\n                scale: 1,\n                rotate: 0,\n            };\n        }\n        return JSON.parse(el.getAttribute('data-mtouch-status')) || defaulTrans;\n    },\n    extend(obj1, obj2) {\n        for (let k in obj2) {\n            if (obj2.hasOwnProperty(k)) {\n                if(typeof obj2[k] == 'object'){\n                    if(typeof obj1[k] !== 'object' || obj1[k] === null){\n                        obj1[k] = {};\n                    }\n                    this.extend(obj1[k],obj2[k]);\n                }else{\n                    obj1[k] = obj2[k];\n                }\n            }\n        }\n        return obj1;\n    },\n    getVector(p1, p2) {\n        if (!p1 || !p2) {\n            console.error('getvector error!');\n            return;\n        }\n        return {\n            x: Math.round(p1.x - p2.x),\n            y: Math.round(p1.y - p2.y),\n        };\n    },\n    getPoint(ev, index) {\n        if (!ev || !ev.touches[index]) {\n            console.error('getPoint error!');\n            return;\n        }\n        return {\n            x: Math.round(ev.touches[index].pageX),\n            y: Math.round(ev.touches[index].pageY),\n        };\n    },\n    getOffset(el){\n        el = typeof el == 'string'? document.querySelector(el): el;\n        let offset = {};\n        offset.width = el.offsetWidth;\n        offset.height = el.offsetHeight;\n        return offset;\n    },\n    matrixTo(matrix){\n        let arr = (matrix.replace('matrix(','').replace(')','')).split(',');\n        let cos = arr[0],\n            sin = arr[1],\n            tan = sin/cos,\n            rotate = Math.atan(tan)*180/Math.PI,\n            scale = cos/(Math.cos(Math.PI/180*rotate)),\n            trans;\n        trans = {\n            x:parseInt(arr[4]),\n            y:parseInt(arr[5]),\n            scale,\n            rotate,\n        };\n        return trans;\n    },\n};\n","import MTouch from '@meitu/mtouch';\nimport _ from './utils';\n\nwindow.requestAnimFrame = (function() {\n    return window.requestAnimationFrame || window.webkitRequestAnimationFrame || function(callback) {\n        window.setTimeout(callback, 1000 / 60);\n    };\n})();\n\nexport default class MGesture {\n    constructor(options) {\n        this.freezed = false;\n        this.ops = {\n            receiver: null,\n            operator: null,\n            drag:false,\n            pinch:false,\n            rotate:false,\n            singlePinch:false,\n            singleRotate:false,\n            limit:null,\n\n            // event\n            event:{\n                touchstart() {},\n                touchmove() {},\n                touchend() {},\n\n                dragstart() {},\n                drag(){},\n                dragend() {},\n\n                pinchstart() {},\n                pinch(){},\n                pinchend() {},\n\n                rotatestart() {},\n                rotate(){},\n                rotatend() {},\n\n                singlePinchstart(){},\n                singlePinch(){},\n                singlePinchend(){},\n\n                singleRotatestart(){},\n                singleRotate(){},\n                singleRotatend(){},\n            },\n\n        };\n\n        if(!options.receiver || typeof options.receiver !== 'string'){\n            console.error('receiver error,there must be a receiver-selector');\n            return;\n        }\n\n        if(options.operator && typeof options.operator !== 'string'){\n            console.error('operator error, the operator param must be a selector');\n            return;\n        }\n\n        this.ops = _.extend(this.ops, options);\n\n        // 事件接收器；\n        this.receiver = document.querySelector(this.ops.receiver);\n        this.receiverStatus = this.receiver.getBoundingClientRect();\n        // 事件操纵器；\n        if(this.ops.operator){\n            this.operator = document.querySelector(this.ops.operator);\n        }else{\n            this.operator = this.receiver;\n        }\n\n        this.operatorStatus = this.operator.getBoundingClientRect();\n\n        if(options.limit === 'crop'){\n            let minX = 0 , minY = 0;\n            if(this.operatorStatus.width > this.receiverStatus.width){\n                minX = (this.operatorStatus.width - this.receiverStatus.width)/this.operatorStatus.width;\n            }\n            if(this.operatorStatus.height > this.receiverStatus.height){\n                minY = (this.operatorStatus.height - this.receiverStatus.height)/this.operatorStatus.height;\n            }\n            this.ops.limit = {\n                x:minX,\n                y:minY,\n                maxScale:1,\n                minScale:1,\n            };\n        }else if(options.limit === true){\n            this.ops.limit = {\n                x:0.5,\n                y:0.5,\n                maxScale:3,\n                minScale:0.4,\n            };\n        }\n\n        this.transform = _.getPos(this.operator);\n        this.mtouch = new MTouch({\n            // config:\n            receiver: this.ops.receiver,\n            operator: this.ops.operator,\n\n            // event\n            touchstart:this.touchstart.bind(this),\n            touchmove:this.ops.event.touchmove,\n            touchend:this.ops.event.touchend,\n\n            drag:this.drag.bind(this),\n            dragstart:this.ops.event.dragstart,\n            dragend:this.ops.event.dragend,\n\n            pinch:this.pinch.bind(this),\n            pinchstart:this.ops.event.pinchstart,\n            pinchend:this.ops.event.pinchend,\n\n            rotate:this.rotate.bind(this),\n            rotatestart:this.ops.event.rotatestart,\n            rotatend:this.ops.event.rotatend,\n\n            singlePinch:{\n                start:this.ops.event.singlePinchstart,\n                pinch:this.singlePinch.bind(this),\n                end:this.ops.event.singlePinchend,\n                buttonId:this.ops.singlePinch.buttonId,\n            },\n\n            singleRotate:{\n                start:this.ops.event.singleRotatestart,\n                rotate:this.singleRotate.bind(this),\n                end:this.ops.event.singleRotatend,\n                buttonId:this.ops.singleRotate.buttonId,\n            },\n        });\n    }\n    touchstart(ev){\n        this.transform = _.getPos(this.operator);\n        this.ops.event.touchstart(ev);\n    }\n    drag(ev){\n        if(this.ops.drag && !this.freezed){\n            this.transform.x += ev.delta.deltaX;\n            this.transform.y += ev.delta.deltaY;\n            this.setTransform();\n            this.ops.event.drag(ev);\n        }\n    }\n    pinch(ev){\n        if(this.ops.pinch && !this.freezed){\n            this.transform.scale *= ev.delta.scale;\n            this.setTransform();\n            this.ops.event.pinch(ev);\n        }\n    }\n    rotate(ev){\n        if(this.ops.rotate && !this.freezed){\n            this.transform.rotate += ev.delta.rotate;\n            this.setTransform();\n            this.ops.event.rotate(ev);\n        }\n    }\n    singlePinch(ev){\n        if(this.ops.singlePinch && !this.freezed){\n            this.transform.scale *= ev.delta.scale;\n            this.setTransform();\n            this.ops.event.singlePinch(ev);\n        }\n    }\n    singleRotate(ev){\n        if(this.ops.singleRotate && !this.freezed){\n            this.transform.rotate += ev.delta.rotate;\n            this.setTransform();\n            this.ops.event.singleRotate(ev);\n        }\n    }\n    setTransform(el = this.operator, transform = this.transform) {\n        let trans = JSON.parse(JSON.stringify(transform));\n        if (this.ops.limit) {\n            trans = this.limitOperator(trans);\n        }\n        window.requestAnimFrame(()=>{\n            _.setPos(el, trans);\n        });\n    }\n    limitOperator(transform) {\n        // 实时获取操作元素的状态；\n        let {minScale, maxScale} = this.ops.limit;\n        if (this.ops.limit.minScale && transform.scale < minScale){\n            transform.scale = minScale;\n        }\n        if (this.ops.limit.maxScale && transform.scale > maxScale){\n            transform.scale = maxScale;\n        }\n        let operatorStatus = _.getOffset(this.operator);\n        // 因缩放产生的间隔；\n        let spaceX = operatorStatus.width * (transform.scale - 1) / 2;\n        let spaceY = operatorStatus.height * (transform.scale - 1) / 2;\n        // 参数设置的边界值；\n        let boundaryX = operatorStatus.width * transform.scale  * (this.ops.limit.x);\n        let boundaryY = operatorStatus.height * transform.scale * (this.ops.limit.y);\n        // 4个边界状态；\n        let minX = spaceX - boundaryX;\n        let minY = spaceX - boundaryY;\n        let maxX = this.receiverStatus.width - operatorStatus.width * transform.scale + spaceX + boundaryX;\n        let maxY = this.receiverStatus.height - operatorStatus.height * transform.scale + spaceY + boundaryY;\n\n        if(this.ops.limit.x || this.ops.limit.x == 0){\n            if(transform.x >= maxX)transform.x = maxX;\n            if(transform.x < minX)transform.x = minX;\n        }\n        if(this.ops.limit.y || this.ops.limit.y == 0){\n            if(transform.y > maxY)transform.y = maxY;\n            if(transform.y < minY)transform.y = minY;\n        }\n        return transform;\n    }\n    switchOperator(el){\n        el = typeof el == 'string'? document.querySelector(el):el;\n        // 转换操作元素后，也需要重置 mtouch 中的单指缩放基本点 singleBasePoint;\n        this.mtouch.switchOperator(el);\n        this.operator = el;\n        this.freeze(false);\n        return this;\n    }\n    freeze(freeze){\n        this.freezed = freeze ? true:false;\n        return this;\n    }\n}\n"],"names":["v1","error","Math","sqrt","x","y","v2","direction","len1","getLength","len2","mr","dot","r","acos","PI","el","offset","getOffset","left","getBoundingClientRect","width","top","round","transform","str","JSON","stringify","value","scale","rotate","document","querySelector","style","setAttribute","defaulTrans","cssTrans","window","getComputedStyle","matrixTo","parse","getAttribute","obj1","obj2","k","hasOwnProperty","_typeof","extend","p1","p2","ev","index","touches","pageX","pageY","rect","body","scrollLeft","scrollTop","offsetWidth","offsetHeight","matrix","arr","replace","split","cos","sin","tan","atan","trans","parseInt","HandlerBus","handlers","handler","push","forEach","splice","length","apply","_this2","EVENT","MTouch","options","ops","use","drag","dragstart","dragend","pinch","pinchstart","pinchend","rotatestart","rotateend","singlePinch","buttonId","singleRotate","_","receiver","operator","fingers","draging","pinching","rotating","singleRotating","singlePinching","startScale","startPoint","secondPoint","pinchStartLength","singlePinchStartLength","vector1","singleBasePoint","driveBus","bind","eventName","_this","add","singlePinchstart","start","singlePinchend","end","singleRotatestart","singleRotatend","fn","evName","addEventListener","type","getPoint","getBasePoint","getVector","pinchV1","touchstart","fire","curPoint","curFingers","rotateV1","rotateV2","pinchV2","pinchLength","singlePinchLength","curSecPoint","vector2","eventFire","getAngle","target","id","touchmove","preventDefault","eventEnd","touchend","ing","eventType","del","height","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","callback","setTimeout","MGesture","freezed","receiverStatus","operatorStatus","limit","minX","minY","getPos","mtouch","event","rotatend","delta","deltaX","deltaY","setTransform","limitOperator","setPos","minScale","maxScale","spaceX","spaceY","boundaryX","boundaryY","maxX","maxY","switchOperator","freeze"],"mappings":"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"}